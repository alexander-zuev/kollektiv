{
  "metadata": {
    "timestamp": "2025-01-02T16:35:33.936030",
    "num_chunks": 46,
    "settings": {
      "max_tokens": 512,
      "soft_token_limit": 400,
      "min_chunk_size": 100,
      "overlap_percentage": 0.05
    }
  },
  "chunks": [
    {
      "created_at": "2025-01-02T12:35:33.726763Z",
      "updated_at": null,
      "source_id": "e18d2711-586c-4630-8c9b-078ba06a590f",
      "chunk_id": "b257a56a-7788-4b49-9a57-d6c9b54006ea",
      "document_id": "8be30bb9-60c2-483b-9400-597b2a719a6e",
      "headers": {
        "h1": "Untitled",
        "h2": "",
        "h3": ""
      },
      "text": "Build with\n\nLearn how to get started with the Anthropic API and Claude.\n\nHelp me get started with prompt caching…\n\nGet started with tools and guides\n\n[**Get started** \\\\\n\\\\\nMake your first API call in minutes.](/en/docs/initial-setup) [**API Reference** \\\\\n\\\\\nIntegrate and scale using our API and SDKs.](/en/api/getting-started) [**Anthropic Console** \\\\\n\\\\\nCraft and test powerful prompts directly in your browser.](https://console.anthropic.com) [**Anthropic Courses** \\\\\n\\\\\nExplore Anthropic’s educational courses and projects.](https://github.com/anthropics/courses) [**Anthropic Cookbook** \\\\\n\\\\\nSee replicable code samples and implementations.](https://github.com/anthropics/anthropic-cookbook) [**Anthropic Quickstarts** \\\\\n\\\\\nDeployable applications built with our API.](https://github.com/anthropics/anthropic-quickstarts)\n",
      "content": "Headers: {'h1': 'Untitled', 'h2': '', 'h3': ''}\n\n Content: Build with\n\nLearn how to get started with the Anthropic API and Claude.\n\nHelp me get started with prompt caching…\n\nGet started with tools and guides\n\n[**Get started** \\\\\n\\\\\nMake your first API call in minutes.](/en/docs/initial-setup) [**API Reference** \\\\\n\\\\\nIntegrate and scale using our API and SDKs.](/en/api/getting-started) [**Anthropic Console** \\\\\n\\\\\nCraft and test powerful prompts directly in your browser.](https://console.anthropic.com) [**Anthropic Courses** \\\\\n\\\\\nExplore Anthropic’s educational courses and projects.](https://github.com/anthropics/courses) [**Anthropic Cookbook** \\\\\n\\\\\nSee replicable code samples and implementations.](https://github.com/anthropics/anthropic-cookbook) [**Anthropic Quickstarts** \\\\\n\\\\\nDeployable applications built with our API.](https://github.com/anthropics/anthropic-quickstarts)\n",
      "token_count": 208,
      "page_title": "Untitled",
      "page_url": ""
    },
    {
      "created_at": "2025-01-02T12:35:33.748815Z",
      "updated_at": null,
      "source_id": "e18d2711-586c-4630-8c9b-078ba06a590f",
      "chunk_id": "7a4c4793-e31d-4bfb-9275-23bddf6f8ee5",
      "document_id": "a05d4e5c-8c73-402b-b788-3e84db99f70b",
      "headers": {
        "h1": "Prompt Library",
        "h2": "",
        "h3": ""
      },
      "text": "Prompt Library\n\nLibrary\nExplore optimized prompts for a breadth of business and personal tasks.\n\nAll prompts\n\nAll prompts\n\nPersonal prompts\n\nBusiness prompts\n\nUser-submitted prompts\n\n[Cosmic keystrokes\\\\\n\\\\\n\\\\\nGenerate an interactive speed typing game in a single HTML file, featuring side-scrolling gameplay and Tailwind CSS styling](/en/prompt-library/cosmic-keystrokes) [Corporate clairvoyant\\\\\n\\\\\n\\\\\nExtract insights, identify risks, and distill key information from long corporate reports into a single memo](/en/prompt-library/corporate-clairvoyant) [Website wizard\\\\\n\\\\\n\\\\\nCreate one-page websites based on user specifications](/en/prompt-library/website-wizard) [Excel formula expert\\\\\n\\\\\n\\\\\nCreate Excel formulas based on user-described calculations or data manipulations](/en/prompt-library/excel-formula-expert) [Google apps scripter\\\\\n\\\\\n\\\\\nGenerate Google Apps scripts to complete tasks based on user requirements](/en/prompt-library/google-apps-scripter) [Python bug buster\\\\\n\\\\\n\\\\\nDetect and fix bugs in Python code](/en/prompt-library/python-bug-buster) [Time travel consultant\\\\\n\\\\\n\\\\\nHelp the user navigate hypothetical time travel scenarios and their implications](/en/prompt-library/time-travel-consultant) [Storytelling sidekick\\\\\n\\\\\n\\\\\nCollaboratively create engaging stories with the user, offering plot twists and character development](/en/prompt-library/storytelling-sidekick) [Cite your sources\\\\\n\\\\\n\\\\\nGet answers to questions about a document's content with relevant citations supporting the response](/en/prompt-library/cite-your-sources) [SQL sorcerer\\\\\n\\\\\n\\\\\nTransform everyday language into SQL queries](/en/prompt-library/sql-sorcerer) [Dream interpreter\\\\\n\\\\\n\\\\\n",
      "content": "Headers: {'h1': 'Prompt Library', 'h2': '', 'h3': ''}\n\n Content: Prompt Library\n\nLibrary\nExplore optimized prompts for a breadth of business and personal tasks.\n\nAll prompts\n\nAll prompts\n\nPersonal prompts\n\nBusiness prompts\n\nUser-submitted prompts\n\n[Cosmic keystrokes\\\\\n\\\\\n\\\\\nGenerate an interactive speed typing game in a single HTML file, featuring side-scrolling gameplay and Tailwind CSS styling](/en/prompt-library/cosmic-keystrokes) [Corporate clairvoyant\\\\\n\\\\\n\\\\\nExtract insights, identify risks, and distill key information from long corporate reports into a single memo](/en/prompt-library/corporate-clairvoyant) [Website wizard\\\\\n\\\\\n\\\\\nCreate one-page websites based on user specifications](/en/prompt-library/website-wizard) [Excel formula expert\\\\\n\\\\\n\\\\\nCreate Excel formulas based on user-described calculations or data manipulations](/en/prompt-library/excel-formula-expert) [Google apps scripter\\\\\n\\\\\n\\\\\nGenerate Google Apps scripts to complete tasks based on user requirements](/en/prompt-library/google-apps-scripter) [Python bug buster\\\\\n\\\\\n\\\\\nDetect and fix bugs in Python code](/en/prompt-library/python-bug-buster) [Time travel consultant\\\\\n\\\\\n\\\\\nHelp the user navigate hypothetical time travel scenarios and their implications](/en/prompt-library/time-travel-consultant) [Storytelling sidekick\\\\\n\\\\\n\\\\\nCollaboratively create engaging stories with the user, offering plot twists and character development](/en/prompt-library/storytelling-sidekick) [Cite your sources\\\\\n\\\\\n\\\\\nGet answers to questions about a document's content with relevant citations supporting the response](/en/prompt-library/cite-your-sources) [SQL sorcerer\\\\\n\\\\\n\\\\\nTransform everyday language into SQL queries](/en/prompt-library/sql-sorcerer) [Dream interpreter\\\\\n\\\\\n\\\\\n",
      "token_count": 401,
      "page_title": "Untitled",
      "page_url": ""
    },
    {
      "created_at": "2025-01-02T12:35:33.748994Z",
      "updated_at": null,
      "source_id": "e18d2711-586c-4630-8c9b-078ba06a590f",
      "chunk_id": "fa93746d-1beb-4c1b-8151-574916628176",
      "document_id": "a05d4e5c-8c73-402b-b788-3e84db99f70b",
      "headers": {
        "h1": "Prompt Library",
        "h2": "",
        "h3": ""
      },
      "text": " the response](/en/prompt-library/cite-your-sources) [SQL sorcerer\\\\\n\\\\\n\\\\\nTransform everyday language into SQL queries](/en/prompt-library/sql-sorcerer) [Dream interpreter\\\\\n\\\\\n\\\\\nOffer interpretations and insights into the symbolism of the user's dreams](/en/prompt-library/dream-interpreter) [Pun-dit\\\\\n\\\\\n\\\\\nGenerate clever puns and wordplay based on any given topic](/en/prompt-library/pun-dit) [Culinary creator\\\\\n\\\\\n\\\\\nSuggest recipe ideas based on the user's available ingredients and dietary preferences](/en/prompt-library/culinary-creator) [Portmanteau poet\\\\\n\\\\\n\\\\\nBlend two words together to create a new, meaningful portmanteau](/en/prompt-library/portmanteau-poet) [Hal the humorous helper\\\\\n\\\\\n\\\\\nChat with a knowledgeable AI that has a sarcastic side](/en/prompt-library/hal-the-humorous-helper) [LaTeX legend\\\\\n\\\\\n\\\\\nWrite LaTeX documents, generating code for mathematical equations, tables, and more](/en/prompt-library/latex-legend) [Mood colorizer\\\\\n\\\\\n\\\\\nTransform text descriptions of moods into corresponding HEX codes](/en/prompt-library/mood-colorizer) [Git gud\\\\\n\\\\\n\\\\\nGenerate appropriate Git commands based on user-described version control actions](/en/prompt-library/git-gud) [Simile savant\\\\\n\\\\\n\\\\\nGenerate similes from basic descriptions](/en/prompt-library/simile-savant) [Ethical dilemma navigator\\\\\n\\\\\n\\\\\nHelp the user think through complex ethical dilemmas and provide different perspectives](/en/prompt-library/ethical-dilemma-navigator) [Meeting scribe\\\\\n\\\\\n\\\\\nDistill meetings into concise summaries including discussion topics, key takeaways, and action items](/en/prompt-library/meeting-scribe) [Idiom illuminator\\\\\n\\\\\n\\\\\n",
      "content": "Headers: {'h1': 'Prompt Library', 'h2': '', 'h3': ''}\n\n Content:  the response](/en/prompt-library/cite-your-sources) [SQL sorcerer\\\\\n\\\\\n\\\\\nTransform everyday language into SQL queries](/en/prompt-library/sql-sorcerer) [Dream interpreter\\\\\n\\\\\n\\\\\nOffer interpretations and insights into the symbolism of the user's dreams](/en/prompt-library/dream-interpreter) [Pun-dit\\\\\n\\\\\n\\\\\nGenerate clever puns and wordplay based on any given topic](/en/prompt-library/pun-dit) [Culinary creator\\\\\n\\\\\n\\\\\nSuggest recipe ideas based on the user's available ingredients and dietary preferences](/en/prompt-library/culinary-creator) [Portmanteau poet\\\\\n\\\\\n\\\\\nBlend two words together to create a new, meaningful portmanteau](/en/prompt-library/portmanteau-poet) [Hal the humorous helper\\\\\n\\\\\n\\\\\nChat with a knowledgeable AI that has a sarcastic side](/en/prompt-library/hal-the-humorous-helper) [LaTeX legend\\\\\n\\\\\n\\\\\nWrite LaTeX documents, generating code for mathematical equations, tables, and more](/en/prompt-library/latex-legend) [Mood colorizer\\\\\n\\\\\n\\\\\nTransform text descriptions of moods into corresponding HEX codes](/en/prompt-library/mood-colorizer) [Git gud\\\\\n\\\\\n\\\\\nGenerate appropriate Git commands based on user-described version control actions](/en/prompt-library/git-gud) [Simile savant\\\\\n\\\\\n\\\\\nGenerate similes from basic descriptions](/en/prompt-library/simile-savant) [Ethical dilemma navigator\\\\\n\\\\\n\\\\\nHelp the user think through complex ethical dilemmas and provide different perspectives](/en/prompt-library/ethical-dilemma-navigator) [Meeting scribe\\\\\n\\\\\n\\\\\nDistill meetings into concise summaries including discussion topics, key takeaways, and action items](/en/prompt-library/meeting-scribe) [Idiom illuminator\\\\\n\\\\\n\\\\\n",
      "token_count": 434,
      "page_title": "Untitled",
      "page_url": ""
    },
    {
      "created_at": "2025-01-02T12:35:33.749166Z",
      "updated_at": null,
      "source_id": "e18d2711-586c-4630-8c9b-078ba06a590f",
      "chunk_id": "3c439995-656a-4f69-8efa-4c24a96ffe58",
      "document_id": "a05d4e5c-8c73-402b-b788-3e84db99f70b",
      "headers": {
        "h1": "Prompt Library",
        "h2": "",
        "h3": ""
      },
      "text": ") [Meeting scribe\\\\\n\\\\\n\\\\\nDistill meetings into concise summaries including discussion topics, key takeaways, and action items](/en/prompt-library/meeting-scribe) [Idiom illuminator\\\\\n\\\\\n\\\\\nExplain the meaning and origin of common idioms and proverbs](/en/prompt-library/idiom-illuminator) [Code consultant\\\\\n\\\\\n\\\\\nSuggest improvements to optimize Python code performance](/en/prompt-library/code-consultant) [Function fabricator\\\\\n\\\\\n\\\\\nCreate Python functions based on detailed specifications](/en/prompt-library/function-fabricator) [Neologism creator\\\\\n\\\\\n\\\\\nInvent new words and provide their definitions based on user-provided concepts or ideas](/en/prompt-library/neologism-creator) [CSV converter\\\\\n\\\\\n\\\\\nConvert data from various formats (JSON, XML, etc.) into properly formatted CSV files](/en/prompt-library/csv-converter) [Emoji encoder\\\\\n\\\\\n\\\\\nConvert plain text into fun and expressive emoji messages](/en/prompt-library/emoji-encoder) [Prose polisher\\\\\n\\\\\n\\\\\nRefine and improve written content with advanced copyediting techniques and suggestions](/en/prompt-library/prose-polisher) [Perspectives ponderer\\\\\n\\\\\n\\\\\nWeigh the pros and cons of a user-provided topic](/en/prompt-library/perspectives-ponderer) [Trivia generator\\\\\n\\\\\n\\\\\nGenerate trivia questions on a wide range of topics and provide hints when needed](/en/prompt-library/trivia-generator) [Mindfulness mentor\\\\\n\\\\\n\\\\\nGuide the user through mindfulness exercises and techniques for stress reduction](/en/prompt-library/mindfulness-mentor) [Second grade simplifier\\\\\n\\\\\n\\\\\nMake complex text easy for young learners to understand](/en/prompt-library/second-grade-simplifier) [VR fitness innovator\\\\\n\\\\\n\\\\\nBrainstorm creative ideas for virtual reality fitness games](/en/prompt-library/vr-fitness-innovator) [PII purifier\\\\\n\\\\\n",
      "content": "Headers: {'h1': 'Prompt Library', 'h2': '', 'h3': ''}\n\n Content: ) [Meeting scribe\\\\\n\\\\\n\\\\\nDistill meetings into concise summaries including discussion topics, key takeaways, and action items](/en/prompt-library/meeting-scribe) [Idiom illuminator\\\\\n\\\\\n\\\\\nExplain the meaning and origin of common idioms and proverbs](/en/prompt-library/idiom-illuminator) [Code consultant\\\\\n\\\\\n\\\\\nSuggest improvements to optimize Python code performance](/en/prompt-library/code-consultant) [Function fabricator\\\\\n\\\\\n\\\\\nCreate Python functions based on detailed specifications](/en/prompt-library/function-fabricator) [Neologism creator\\\\\n\\\\\n\\\\\nInvent new words and provide their definitions based on user-provided concepts or ideas](/en/prompt-library/neologism-creator) [CSV converter\\\\\n\\\\\n\\\\\nConvert data from various formats (JSON, XML, etc.) into properly formatted CSV files](/en/prompt-library/csv-converter) [Emoji encoder\\\\\n\\\\\n\\\\\nConvert plain text into fun and expressive emoji messages](/en/prompt-library/emoji-encoder) [Prose polisher\\\\\n\\\\\n\\\\\nRefine and improve written content with advanced copyediting techniques and suggestions](/en/prompt-library/prose-polisher) [Perspectives ponderer\\\\\n\\\\\n\\\\\nWeigh the pros and cons of a user-provided topic](/en/prompt-library/perspectives-ponderer) [Trivia generator\\\\\n\\\\\n\\\\\nGenerate trivia questions on a wide range of topics and provide hints when needed](/en/prompt-library/trivia-generator) [Mindfulness mentor\\\\\n\\\\\n\\\\\nGuide the user through mindfulness exercises and techniques for stress reduction](/en/prompt-library/mindfulness-mentor) [Second grade simplifier\\\\\n\\\\\n\\\\\nMake complex text easy for young learners to understand](/en/prompt-library/second-grade-simplifier) [VR fitness innovator\\\\\n\\\\\n\\\\\nBrainstorm creative ideas for virtual reality fitness games](/en/prompt-library/vr-fitness-innovator) [PII purifier\\\\\n\\\\\n",
      "token_count": 450,
      "page_title": "Untitled",
      "page_url": ""
    },
    {
      "created_at": "2025-01-02T12:35:33.749327Z",
      "updated_at": null,
      "source_id": "e18d2711-586c-4630-8c9b-078ba06a590f",
      "chunk_id": "5a09f8ae-d528-4a73-bbfc-0d0e23b2f067",
      "document_id": "a05d4e5c-8c73-402b-b788-3e84db99f70b",
      "headers": {
        "h1": "Prompt Library",
        "h2": "",
        "h3": ""
      },
      "text": "/second-grade-simplifier) [VR fitness innovator\\\\\n\\\\\n\\\\\nBrainstorm creative ideas for virtual reality fitness games](/en/prompt-library/vr-fitness-innovator) [PII purifier\\\\\n\\\\\n\\\\\nAutomatically detect and remove personally identifiable information (PII) from text documents](/en/prompt-library/pii-purifier) [Memo maestro\\\\\n\\\\\n\\\\\nCompose comprehensive company memos based on key points](/en/prompt-library/memo-maestro) [Career coach\\\\\n\\\\\n\\\\\nEngage in role-play conversations with an AI career coach](/en/prompt-library/career-coach) [Grading guru\\\\\n\\\\\n\\\\\nCompare and evaluate the quality of written texts based on user-defined criteria and standards](/en/prompt-library/grading-guru) [Tongue twister\\\\\n\\\\\n\\\\\nCreate challenging tongue twisters](/en/prompt-library/tongue-twister) [Interview question crafter\\\\\n\\\\\n\\\\\nGenerate questions for interviews](/en/prompt-library/interview-question-crafter) [Grammar genie\\\\\n\\\\\n\\\\\nTransform grammatically incorrect sentences into proper English](/en/prompt-library/grammar-genie) [Riddle me this\\\\\n\\\\\n\\\\\nGenerate riddles and guide the user to the solutions](/en/prompt-library/riddle-me-this) [Code clarifier\\\\\n\\\\\n\\\\\nSimplify and explain complex code in plain language](/en/prompt-library/code-clarifier) [Alien anthropologist\\\\\n\\\\\n\\\\\nAnalyze human culture and customs from the perspective of an alien anthropologist](/en/prompt-library/alien-anthropologist) [Data organizer\\\\\n\\\\\n\\\\\nTurn unstructured text into bespoke JSON tables](/en/prompt-library/data-organizer) [Brand builder\\\\\n\\\\\n\\\\\nCraft a design brief for a holistic brand identity](/en/prompt-library/brand-builder) [Efficiency estimator\\\\\n\\\\\n\\\\\n",
      "content": "Headers: {'h1': 'Prompt Library', 'h2': '', 'h3': ''}\n\n Content: /second-grade-simplifier) [VR fitness innovator\\\\\n\\\\\n\\\\\nBrainstorm creative ideas for virtual reality fitness games](/en/prompt-library/vr-fitness-innovator) [PII purifier\\\\\n\\\\\n\\\\\nAutomatically detect and remove personally identifiable information (PII) from text documents](/en/prompt-library/pii-purifier) [Memo maestro\\\\\n\\\\\n\\\\\nCompose comprehensive company memos based on key points](/en/prompt-library/memo-maestro) [Career coach\\\\\n\\\\\n\\\\\nEngage in role-play conversations with an AI career coach](/en/prompt-library/career-coach) [Grading guru\\\\\n\\\\\n\\\\\nCompare and evaluate the quality of written texts based on user-defined criteria and standards](/en/prompt-library/grading-guru) [Tongue twister\\\\\n\\\\\n\\\\\nCreate challenging tongue twisters](/en/prompt-library/tongue-twister) [Interview question crafter\\\\\n\\\\\n\\\\\nGenerate questions for interviews](/en/prompt-library/interview-question-crafter) [Grammar genie\\\\\n\\\\\n\\\\\nTransform grammatically incorrect sentences into proper English](/en/prompt-library/grammar-genie) [Riddle me this\\\\\n\\\\\n\\\\\nGenerate riddles and guide the user to the solutions](/en/prompt-library/riddle-me-this) [Code clarifier\\\\\n\\\\\n\\\\\nSimplify and explain complex code in plain language](/en/prompt-library/code-clarifier) [Alien anthropologist\\\\\n\\\\\n\\\\\nAnalyze human culture and customs from the perspective of an alien anthropologist](/en/prompt-library/alien-anthropologist) [Data organizer\\\\\n\\\\\n\\\\\nTurn unstructured text into bespoke JSON tables](/en/prompt-library/data-organizer) [Brand builder\\\\\n\\\\\n\\\\\nCraft a design brief for a holistic brand identity](/en/prompt-library/brand-builder) [Efficiency estimator\\\\\n\\\\\n\\\\\n",
      "token_count": 428,
      "page_title": "Untitled",
      "page_url": ""
    },
    {
      "created_at": "2025-01-02T12:35:33.749492Z",
      "updated_at": null,
      "source_id": "e18d2711-586c-4630-8c9b-078ba06a590f",
      "chunk_id": "2351f262-fe86-425a-9942-241368d51d04",
      "document_id": "a05d4e5c-8c73-402b-b788-3e84db99f70b",
      "headers": {
        "h1": "Prompt Library",
        "h2": "",
        "h3": ""
      },
      "text": " tables](/en/prompt-library/data-organizer) [Brand builder\\\\\n\\\\\n\\\\\nCraft a design brief for a holistic brand identity](/en/prompt-library/brand-builder) [Efficiency estimator\\\\\n\\\\\n\\\\\nCalculate the time complexity of functions and algorithms](/en/prompt-library/efficiency-estimator) [Review classifier\\\\\n\\\\\n\\\\\nCategorize feedback into pre-specified tags and categorizations](/en/prompt-library/review-classifier) [Direction decoder\\\\\n\\\\\n\\\\\nTransform natural language into step-by-step directions](/en/prompt-library/direction-decoder) [Motivational muse\\\\\n\\\\\n\\\\\nProvide personalized motivational messages and affirmations based on user input](/en/prompt-library/motivational-muse) [Email extractor\\\\\n\\\\\n\\\\\nExtract email addresses from a document into a JSON-formatted list](/en/prompt-library/email-extractor) [Master moderator\\\\\n\\\\\n\\\\\nEvaluate user inputs for potential harmful or illegal content](/en/prompt-library/master-moderator) [Lesson planner\\\\\n\\\\\n\\\\\nCraft in depth lesson plans on any subject](/en/prompt-library/lesson-planner) [Socratic sage\\\\\n\\\\\n\\\\\nEngage in Socratic style conversation over a user-given topic](/en/prompt-library/socratic-sage) [Alliteration alchemist\\\\\n\\\\\n\\\\\nGenerate alliterative phrases and sentences for any given subject](/en/prompt-library/alliteration-alchemist) [Futuristic fashion advisor\\\\\n\\\\\n\\\\\nSuggest avant-garde fashion trends and styles for the user's specific preferences](/en/prompt-library/futuristic-fashion-advisor) [Polyglot superpowers\\\\\n\\\\\n\\\\\nTranslate text from any language into any language](/en/prompt-library/polyglot-superpowers) [Product naming pro\\\\\n\\\\\n\\\\\nCreate catchy product names from descriptions and keywords](/en/prompt-library/product-naming-pro) [Philosophical musings\\\\\n\\\\\n\\\\\n",
      "content": "Headers: {'h1': 'Prompt Library', 'h2': '', 'h3': ''}\n\n Content:  tables](/en/prompt-library/data-organizer) [Brand builder\\\\\n\\\\\n\\\\\nCraft a design brief for a holistic brand identity](/en/prompt-library/brand-builder) [Efficiency estimator\\\\\n\\\\\n\\\\\nCalculate the time complexity of functions and algorithms](/en/prompt-library/efficiency-estimator) [Review classifier\\\\\n\\\\\n\\\\\nCategorize feedback into pre-specified tags and categorizations](/en/prompt-library/review-classifier) [Direction decoder\\\\\n\\\\\n\\\\\nTransform natural language into step-by-step directions](/en/prompt-library/direction-decoder) [Motivational muse\\\\\n\\\\\n\\\\\nProvide personalized motivational messages and affirmations based on user input](/en/prompt-library/motivational-muse) [Email extractor\\\\\n\\\\\n\\\\\nExtract email addresses from a document into a JSON-formatted list](/en/prompt-library/email-extractor) [Master moderator\\\\\n\\\\\n\\\\\nEvaluate user inputs for potential harmful or illegal content](/en/prompt-library/master-moderator) [Lesson planner\\\\\n\\\\\n\\\\\nCraft in depth lesson plans on any subject](/en/prompt-library/lesson-planner) [Socratic sage\\\\\n\\\\\n\\\\\nEngage in Socratic style conversation over a user-given topic](/en/prompt-library/socratic-sage) [Alliteration alchemist\\\\\n\\\\\n\\\\\nGenerate alliterative phrases and sentences for any given subject](/en/prompt-library/alliteration-alchemist) [Futuristic fashion advisor\\\\\n\\\\\n\\\\\nSuggest avant-garde fashion trends and styles for the user's specific preferences](/en/prompt-library/futuristic-fashion-advisor) [Polyglot superpowers\\\\\n\\\\\n\\\\\nTranslate text from any language into any language](/en/prompt-library/polyglot-superpowers) [Product naming pro\\\\\n\\\\\n\\\\\nCreate catchy product names from descriptions and keywords](/en/prompt-library/product-naming-pro) [Philosophical musings\\\\\n\\\\\n\\\\\n",
      "token_count": 436,
      "page_title": "Untitled",
      "page_url": ""
    },
    {
      "created_at": "2025-01-02T12:35:33.749593Z",
      "updated_at": null,
      "source_id": "e18d2711-586c-4630-8c9b-078ba06a590f",
      "chunk_id": "d1186323-011a-4572-b11b-0cf68abcf8e5",
      "document_id": "a05d4e5c-8c73-402b-b788-3e84db99f70b",
      "headers": {
        "h1": "Prompt Library",
        "h2": "",
        "h3": ""
      },
      "text": "-library/polyglot-superpowers) [Product naming pro\\\\\n\\\\\n\\\\\nCreate catchy product names from descriptions and keywords](/en/prompt-library/product-naming-pro) [Philosophical musings\\\\\n\\\\\n\\\\\nEngage in deep philosophical discussions and thought experiments](/en/prompt-library/philosophical-musings) [Spreadsheet sorcerer\\\\\n\\\\\n\\\\\nGenerate CSV spreadsheets with various types of data](/en/prompt-library/spreadsheet-sorcerer) [Sci-fi scenario simulator\\\\\n\\\\\n\\\\\nDiscuss with the user various science fiction scenarios and associated challenges and considerations](/en/prompt-library/sci-fi-scenario-simulator) [Adaptive editor\\\\\n\\\\\n\\\\\nRewrite text following user-given instructions, such as with a different tone, audience, or style](/en/prompt-library/adaptive-editor) [Babel's broadcasts\\\\\n\\\\\n\\\\\nCreate compelling product announcement tweets in the world's 10 most spoken languages](/en/prompt-library/babels-broadcasts) [Tweet tone detector\\\\\n\\\\\n\\\\\nDetect the tone and sentiment behind tweets](/en/prompt-library/tweet-tone-detector) [Airport code analyst\\\\\n\\\\\n\\\\\nFind and extract airport codes from text](/en/prompt-library/airport-code-analyst)\n",
      "content": "Headers: {'h1': 'Prompt Library', 'h2': '', 'h3': ''}\n\n Content: -library/polyglot-superpowers) [Product naming pro\\\\\n\\\\\n\\\\\nCreate catchy product names from descriptions and keywords](/en/prompt-library/product-naming-pro) [Philosophical musings\\\\\n\\\\\n\\\\\nEngage in deep philosophical discussions and thought experiments](/en/prompt-library/philosophical-musings) [Spreadsheet sorcerer\\\\\n\\\\\n\\\\\nGenerate CSV spreadsheets with various types of data](/en/prompt-library/spreadsheet-sorcerer) [Sci-fi scenario simulator\\\\\n\\\\\n\\\\\nDiscuss with the user various science fiction scenarios and associated challenges and considerations](/en/prompt-library/sci-fi-scenario-simulator) [Adaptive editor\\\\\n\\\\\n\\\\\nRewrite text following user-given instructions, such as with a different tone, audience, or style](/en/prompt-library/adaptive-editor) [Babel's broadcasts\\\\\n\\\\\n\\\\\nCreate compelling product announcement tweets in the world's 10 most spoken languages](/en/prompt-library/babels-broadcasts) [Tweet tone detector\\\\\n\\\\\n\\\\\nDetect the tone and sentiment behind tweets](/en/prompt-library/tweet-tone-detector) [Airport code analyst\\\\\n\\\\\n\\\\\nFind and extract airport codes from text](/en/prompt-library/airport-code-analyst)\n",
      "token_count": 281,
      "page_title": "Untitled",
      "page_url": ""
    },
    {
      "created_at": "2025-01-02T12:35:33.754484Z",
      "updated_at": null,
      "source_id": "e18d2711-586c-4630-8c9b-078ba06a590f",
      "chunk_id": "ad127b8c-6f9d-4160-afc1-624841d6fb17",
      "document_id": "29cac227-4c37-4370-a56e-45938ac908e3",
      "headers": {
        "h1": "Untitled",
        "h2": "Get started",
        "h3": ""
      },
      "text": "Get started\n\nWelcome to Claude\n\nWe’ve upgraded Claude 3.5 Sonnet, our most intelligent model yet, and added computer use. Read more in our [blog post](https://www.anthropic.com/news/3-5-models-and-computer-use).\n\nLooking to chat with Claude? Visit [claude.ai](http://www.claude.ai)!\nIf you’re new to Claude, start here to learn the essentials and make your first API call.\n\n[**Intro to Claude** \\\\\n\\\\\nExplore Claude’s capabilities and development flow.](/en/docs/intro-to-claude) [**Quickstart** \\\\\n\\\\\nLearn how to make your first API call in minutes.](/en/docs/quickstart) [**Prompt Library** \\\\\n\\\\\nExplore example prompts for inspiration.](/en/prompt-library/library)\n",
      "content": "Headers: {'h1': 'Untitled', 'h2': 'Get started', 'h3': ''}\n\n Content: Get started\n\nWelcome to Claude\n\nWe’ve upgraded Claude 3.5 Sonnet, our most intelligent model yet, and added computer use. Read more in our [blog post](https://www.anthropic.com/news/3-5-models-and-computer-use).\n\nLooking to chat with Claude? Visit [claude.ai](http://www.claude.ai)!\nIf you’re new to Claude, start here to learn the essentials and make your first API call.\n\n[**Intro to Claude** \\\\\n\\\\\nExplore Claude’s capabilities and development flow.](/en/docs/intro-to-claude) [**Quickstart** \\\\\n\\\\\nLearn how to make your first API call in minutes.](/en/docs/quickstart) [**Prompt Library** \\\\\n\\\\\nExplore example prompts for inspiration.](/en/prompt-library/library)\n",
      "token_count": 173,
      "page_title": "Untitled",
      "page_url": ""
    },
    {
      "created_at": "2025-01-02T12:35:33.754551Z",
      "updated_at": null,
      "source_id": "e18d2711-586c-4630-8c9b-078ba06a590f",
      "chunk_id": "2b05c582-4a28-40ad-8c50-fa9c5bf4b006",
      "document_id": "29cac227-4c37-4370-a56e-45938ac908e3",
      "headers": {
        "h1": "Untitled",
        "h2": "Develop with Claude",
        "h3": ""
      },
      "text": ") [**Quickstart** \\\\\n\\\\\nLearn how to make your first API call in minutes.](/en/docs/quickstart) [**Prompt Library** \\\\\n\\\\\nExplore example prompts for inspiration.](/en/prompt-library/library)\nAnthropic has best-in-class developer tools to build scalable applications with Claude.\n\n[**Developer Console** \\\\\n\\\\\nEnjoy easier, more powerful prompting in your browser with the Workbench and prompt generator tool.](https://console.anthropic.com) [**API Reference** \\\\\n\\\\\nExplore, implement, and scale with the Anthropic API and SDKs.](/en/api/getting-started) [**Anthropic Cookbook** \\\\\n\\\\\nLearn with interactive Jupyter notebooks that demonstrate uploading PDFs, embeddings, and more.](https://github.com/anthropics/anthropic-cookbook)\n",
      "content": "Headers: {'h1': 'Untitled', 'h2': 'Develop with Claude', 'h3': ''}\n\n Content: ) [**Quickstart** \\\\\n\\\\\nLearn how to make your first API call in minutes.](/en/docs/quickstart) [**Prompt Library** \\\\\n\\\\\nExplore example prompts for inspiration.](/en/prompt-library/library)\nAnthropic has best-in-class developer tools to build scalable applications with Claude.\n\n[**Developer Console** \\\\\n\\\\\nEnjoy easier, more powerful prompting in your browser with the Workbench and prompt generator tool.](https://console.anthropic.com) [**API Reference** \\\\\n\\\\\nExplore, implement, and scale with the Anthropic API and SDKs.](/en/api/getting-started) [**Anthropic Cookbook** \\\\\n\\\\\nLearn with interactive Jupyter notebooks that demonstrate uploading PDFs, embeddings, and more.](https://github.com/anthropics/anthropic-cookbook)\n",
      "token_count": 174,
      "page_title": "Untitled",
      "page_url": ""
    },
    {
      "created_at": "2025-01-02T12:35:33.754637Z",
      "updated_at": null,
      "source_id": "e18d2711-586c-4630-8c9b-078ba06a590f",
      "chunk_id": "218a85f7-863b-4564-90b5-e6933889e587",
      "document_id": "29cac227-4c37-4370-a56e-45938ac908e3",
      "headers": {
        "h1": "Untitled",
        "h2": "Key capabilities",
        "h3": ""
      },
      "text": "/en/api/getting-started) [**Anthropic Cookbook** \\\\\n\\\\\nLearn with interactive Jupyter notebooks that demonstrate uploading PDFs, embeddings, and more.](https://github.com/anthropics/anthropic-cookbook)\nClaude can assist with many tasks that involve text, code, and images.\n\n[**Text and code generation** \\\\\n\\\\\nSummarize text, answer questions, extract data, translate text, and explain and generate code.](/en/docs/build-with-claude/text-generation) [**Vision** \\\\\n\\\\\nProcess and analyze visual input and generate text and code from images.](/en/docs/build-with-claude/vision)\n[**Help Center** \\\\\n\\\\\nFind answers to frequently asked account and billing questions.](https://support.anthropic.com/en/) [**Service Status** \\\\\n\\\\\nCheck the status of Anthropic services.](https://www.anthropic.com/status)\n\nWas this page helpful?\n\nYesNo\n\n- [Get started](#get-started)\n- [Develop with Claude](#develop-with-claude)\n- [Key capabilities](#key-capabilities)\n- [Support](#support)\n",
      "content": "Headers: {'h1': 'Untitled', 'h2': 'Key capabilities', 'h3': ''}\n\n Content: /en/api/getting-started) [**Anthropic Cookbook** \\\\\n\\\\\nLearn with interactive Jupyter notebooks that demonstrate uploading PDFs, embeddings, and more.](https://github.com/anthropics/anthropic-cookbook)\nClaude can assist with many tasks that involve text, code, and images.\n\n[**Text and code generation** \\\\\n\\\\\nSummarize text, answer questions, extract data, translate text, and explain and generate code.](/en/docs/build-with-claude/text-generation) [**Vision** \\\\\n\\\\\nProcess and analyze visual input and generate text and code from images.](/en/docs/build-with-claude/vision)\n[**Help Center** \\\\\n\\\\\nFind answers to frequently asked account and billing questions.](https://support.anthropic.com/en/) [**Service Status** \\\\\n\\\\\nCheck the status of Anthropic services.](https://www.anthropic.com/status)\n\nWas this page helpful?\n\nYesNo\n\n- [Get started](#get-started)\n- [Develop with Claude](#develop-with-claude)\n- [Key capabilities](#key-capabilities)\n- [Support](#support)\n",
      "token_count": 241,
      "page_title": "Untitled",
      "page_url": ""
    },
    {
      "created_at": "2025-01-02T12:35:33.764833Z",
      "updated_at": null,
      "source_id": "e18d2711-586c-4630-8c9b-078ba06a590f",
      "chunk_id": "2c8d3267-5170-40cf-8c10-f8a8ad77e3f2",
      "document_id": "17ac74d2-e01d-4945-a061-6e466dc6f165",
      "headers": {
        "h1": "Untitled",
        "h2": "Prerequisites",
        "h3": ""
      },
      "text": "Get started\n\nInitial setup\n\nIn this example, we’ll have Claude write a Python function that checks if a string is a palindrome.\nYou will need:\n\n- An Anthropic [Console account](console.anthropic.com)\n- An [API key](https://console.anthropic.com/settings/keys)\n- Python 3.7+ or TypeScript 4.5+\n\nAnthropic provides [Python and TypeScript SDKs](https://docs.anthropic.com/en/api/client-sdks), although you can make direct HTTP requests to the API.\n",
      "content": "Headers: {'h1': 'Untitled', 'h2': 'Prerequisites', 'h3': ''}\n\n Content: Get started\n\nInitial setup\n\nIn this example, we’ll have Claude write a Python function that checks if a string is a palindrome.\nYou will need:\n\n- An Anthropic [Console account](console.anthropic.com)\n- An [API key](https://console.anthropic.com/settings/keys)\n- Python 3.7+ or TypeScript 4.5+\n\nAnthropic provides [Python and TypeScript SDKs](https://docs.anthropic.com/en/api/client-sdks), although you can make direct HTTP requests to the API.\n",
      "token_count": 111,
      "page_title": "Untitled",
      "page_url": ""
    },
    {
      "created_at": "2025-01-02T12:35:33.765017Z",
      "updated_at": null,
      "source_id": "e18d2711-586c-4630-8c9b-078ba06a590f",
      "chunk_id": "b8623815-3f1a-49f5-8f15-6a9e82feb699",
      "document_id": "17ac74d2-e01d-4945-a061-6e466dc6f165",
      "headers": {
        "h1": "Untitled",
        "h2": "Start with the Workbench",
        "h3": ""
      },
      "text": ")\n- Python 3.7+ or TypeScript 4.5+\n\nAnthropic provides [Python and TypeScript SDKs](https://docs.anthropic.com/en/api/client-sdks), although you can make direct HTTP requests to the API.\nAny API call you make–-regardless of the specific task-–sends a well-configured prompt to the Anthropic API. As you’re learning to make the most of Claude, we recommend that you start the development process in the Workbench, a web-based interface to Claude.\n\nLog into the [Anthropic Console](https://console.anthropic.com) and click **Workbench**.\n\nIn the middle section, under User, let’s ask Claude a question.\n\nUser\n\nCopy\n\n```Unset\nWhy is the ocean salty?\n\n```\n\nClick **Run**. On the right side, you’ll see output like\n\nResponse\n\nCopy\n\n```Unset\nThe ocean is salty due to several factors:\n\n1. Weathering of rocks: Over millions of years, rain, rivers, and streams have eroded rocks containing mineral salts. These salts are carried into the ocean by water runoff.\n2. Volcanic activity: Underwater volcanoes and hydrothermal vents release minerals, including salts, into the ocean water.\n3. Atmospheric deposition: Salt particles from ocean spray can be carried by wind and deposited back into the ocean.\n4. Evaporation: As water evaporates from the surface of the ocean, it leaves behind dissolved salts, increasing the concentration of salt in the remaining water.\n5. Biological processes: Some marine organisms contribute to the ocean's salinity by releasing salt compounds as byproducts of their metabolism.\n\nOver time, these processes have continuously added salts to the ocean, while evaporation removes pure water, leading to the ocean's current salinity levels. It's important to note that the total amount of salt in the ocean remains relatively stable because the input of salts is balanced by the removal of salts through processes like the formation of evaporite deposits.\n\n```\n\n",
      "content": "Headers: {'h1': 'Untitled', 'h2': 'Start with the Workbench', 'h3': ''}\n\n Content: )\n- Python 3.7+ or TypeScript 4.5+\n\nAnthropic provides [Python and TypeScript SDKs](https://docs.anthropic.com/en/api/client-sdks), although you can make direct HTTP requests to the API.\nAny API call you make–-regardless of the specific task-–sends a well-configured prompt to the Anthropic API. As you’re learning to make the most of Claude, we recommend that you start the development process in the Workbench, a web-based interface to Claude.\n\nLog into the [Anthropic Console](https://console.anthropic.com) and click **Workbench**.\n\nIn the middle section, under User, let’s ask Claude a question.\n\nUser\n\nCopy\n\n```Unset\nWhy is the ocean salty?\n\n```\n\nClick **Run**. On the right side, you’ll see output like\n\nResponse\n\nCopy\n\n```Unset\nThe ocean is salty due to several factors:\n\n1. Weathering of rocks: Over millions of years, rain, rivers, and streams have eroded rocks containing mineral salts. These salts are carried into the ocean by water runoff.\n2. Volcanic activity: Underwater volcanoes and hydrothermal vents release minerals, including salts, into the ocean water.\n3. Atmospheric deposition: Salt particles from ocean spray can be carried by wind and deposited back into the ocean.\n4. Evaporation: As water evaporates from the surface of the ocean, it leaves behind dissolved salts, increasing the concentration of salt in the remaining water.\n5. Biological processes: Some marine organisms contribute to the ocean's salinity by releasing salt compounds as byproducts of their metabolism.\n\nOver time, these processes have continuously added salts to the ocean, while evaporation removes pure water, leading to the ocean's current salinity levels. It's important to note that the total amount of salt in the ocean remains relatively stable because the input of salts is balanced by the removal of salts through processes like the formation of evaporite deposits.\n\n```\n\n",
      "token_count": 410,
      "page_title": "Untitled",
      "page_url": ""
    },
    {
      "created_at": "2025-01-02T12:35:33.765135Z",
      "updated_at": null,
      "source_id": "e18d2711-586c-4630-8c9b-078ba06a590f",
      "chunk_id": "d71618f4-89c9-4dd6-9583-ef263128bc4c",
      "document_id": "17ac74d2-e01d-4945-a061-6e466dc6f165",
      "headers": {
        "h1": "Untitled",
        "h2": "Start with the Workbench",
        "h3": ""
      },
      "text": " to the ocean's current salinity levels. It's important to note that the total amount of salt in the ocean remains relatively stable because the input of salts is balanced by the removal of salts through processes like the formation of evaporite deposits.\n\n```\n\nThis is a good answer, but let’s say we wanted to control the exact type of answer Claude gives. For example, only allowing Claude to respond to questions with poems. We can control the format, tone, and personality of the response by adding a System Prompt.\n\nSystem prompt\n\nCopy\n\n```Unset\nYou are a world-class poet. Respond only with short poems.\n\n```\n\nClick **Run** again.\n\nResponse\n\nCopy\n\n```Unset\nThe ocean's salty brine,\nA tale of time and elements combined.\nRocks and rain, a slow erosion,\nMinerals carried in solution.\nEons pass, the salt remains,\nIn the vast, eternal watery domain.\n\n```\n\nSee how Claude’s response has changed? LLMs respond well to clear and direct instructions. You can put the role instructions in either the system prompt or the user message. We recommend testing to see which way yields the best results for your use case.\n\nOnce you’ve tweaked the inputs such that you’re pleased with the output–-and have a good sense how to use Claude–-convert your Workbench into an integration.\n\nClick **Get Code** to copy the generated code representing your Workbench session.\n",
      "content": "Headers: {'h1': 'Untitled', 'h2': 'Start with the Workbench', 'h3': ''}\n\n Content:  to the ocean's current salinity levels. It's important to note that the total amount of salt in the ocean remains relatively stable because the input of salts is balanced by the removal of salts through processes like the formation of evaporite deposits.\n\n```\n\nThis is a good answer, but let’s say we wanted to control the exact type of answer Claude gives. For example, only allowing Claude to respond to questions with poems. We can control the format, tone, and personality of the response by adding a System Prompt.\n\nSystem prompt\n\nCopy\n\n```Unset\nYou are a world-class poet. Respond only with short poems.\n\n```\n\nClick **Run** again.\n\nResponse\n\nCopy\n\n```Unset\nThe ocean's salty brine,\nA tale of time and elements combined.\nRocks and rain, a slow erosion,\nMinerals carried in solution.\nEons pass, the salt remains,\nIn the vast, eternal watery domain.\n\n```\n\nSee how Claude’s response has changed? LLMs respond well to clear and direct instructions. You can put the role instructions in either the system prompt or the user message. We recommend testing to see which way yields the best results for your use case.\n\nOnce you’ve tweaked the inputs such that you’re pleased with the output–-and have a good sense how to use Claude–-convert your Workbench into an integration.\n\nClick **Get Code** to copy the generated code representing your Workbench session.\n",
      "token_count": 293,
      "page_title": "Untitled",
      "page_url": ""
    },
    {
      "created_at": "2025-01-02T12:35:33.765194Z",
      "updated_at": null,
      "source_id": "e18d2711-586c-4630-8c9b-078ba06a590f",
      "chunk_id": "f12646ed-0a6a-4850-ad1c-8c1ef3a70a3b",
      "document_id": "17ac74d2-e01d-4945-a061-6e466dc6f165",
      "headers": {
        "h1": "Untitled",
        "h2": "Install the SDK",
        "h3": ""
      },
      "text": " you’ve tweaked the inputs such that you’re pleased with the output–-and have a good sense how to use Claude–-convert your Workbench into an integration.\n\nClick **Get Code** to copy the generated code representing your Workbench session.\nAnthropic provides SDKs for Python (3.7+) and TypeScript (4.5+).\n\n- Python\n- TypeScript\n\nIn your project directory, create a virtual environment.\n\nPython\n\nCopy\n\n```python\npython -m venv claude-env\n\n```\n\nActivate the virtual environment using\n\n- On macOS or Linux, <code>source claude-env/bin/activate</code>\n- On Windows, <code>claude-env\\Scripts\\activate</code>\n\nPython\n\nCopy\n\n```python\npip install anthropic\n\n```\n",
      "content": "Headers: {'h1': 'Untitled', 'h2': 'Install the SDK', 'h3': ''}\n\n Content:  you’ve tweaked the inputs such that you’re pleased with the output–-and have a good sense how to use Claude–-convert your Workbench into an integration.\n\nClick **Get Code** to copy the generated code representing your Workbench session.\nAnthropic provides SDKs for Python (3.7+) and TypeScript (4.5+).\n\n- Python\n- TypeScript\n\nIn your project directory, create a virtual environment.\n\nPython\n\nCopy\n\n```python\npython -m venv claude-env\n\n```\n\nActivate the virtual environment using\n\n- On macOS or Linux, <code>source claude-env/bin/activate</code>\n- On Windows, <code>claude-env\\Scripts\\activate</code>\n\nPython\n\nCopy\n\n```python\npip install anthropic\n\n```\n",
      "token_count": 160,
      "page_title": "Untitled",
      "page_url": ""
    },
    {
      "created_at": "2025-01-02T12:35:33.765455Z",
      "updated_at": null,
      "source_id": "e18d2711-586c-4630-8c9b-078ba06a590f",
      "chunk_id": "bd30e8eb-6570-4420-82f0-1445013cbcc4",
      "document_id": "17ac74d2-e01d-4945-a061-6e466dc6f165",
      "headers": {
        "h1": "Untitled",
        "h2": "Set your API key",
        "h3": ""
      },
      "text": "- On macOS or Linux, <code>source claude-env/bin/activate</code>\n- On Windows, <code>claude-env\\Scripts\\activate</code>\n\nPython\n\nCopy\n\n```python\npip install anthropic\n\n```\nEvery API call requires a valid API key. The SDKs are designed to pull the API key from an environmental variable <code>ANTHROPIC_API_KEY</code>. You can also supply the key to the Anthropic client when initializing it.\n\n- macOS and Linux\n- Windows\n\nCopy\n\n```bash\nexport ANTHROPIC_API_KEY='your-api-key-here'\n\n```\nCall the API by passing the proper parameters to the [/messages/create](https://docs.anthropic.com/en/api/messages) endpoint.\n\nNote that the code provided by the Workbench sets the API key in the constructor. If you set the API key as an environment variable, you can omit that line as below.\n\n- Python\n- TypeScript\n\nclaude\\_quickstart.py\n\nCopy\n\n```python\nimport anthropic\n\nclient = anthropic.Anthropic()\n\nmessage = client.messages.create(\n    model=\"claude-3-5-sonnet-20241022\",\n    max_tokens=1000,\n    temperature=0,\n    system=\"You are a world-class poet. Respond only with short poems.\",\n    messages=[\\\n        {\\\n            \"role\": \"user\",\\\n            \"content\": [\\\n                {\\\n                    \"type\": \"text\",\\\n                    \"text\": \"Why is the ocean salty?\"\\\n                }\\\n            ]\\\n        }\\\n    ]\n)\nprint(message.content)\n\n```\n\nRun the code using <code>python3 claude_quickstart.py</code> or <code>node claude_quickstart.js</code>.\n\nResponse\n\nCopy\n\n```python\n[TextBlock(text=\"The ocean's salty brine,\\nA tale of time and design.\\nRocks and rivers, their minerals shed,\\nAccumulating in the ocean's bed.\\nEvaporation leaves salt behind,\\nIn the vast waters, forever enshrined.\", type='text')]\n\n```\n\nThe Workbench and code examples use default model settings for: model (name), temperature, and max tokens to sample.\n\nThis quickstart shows how to develop a basic, but functional, Claude-powered application using the Console, Workbench, and API. You can use this same workflow as the foundation for much more powerful use cases.\n",
      "content": "Headers: {'h1': 'Untitled', 'h2': 'Set your API key', 'h3': ''}\n\n Content: - On macOS or Linux, <code>source claude-env/bin/activate</code>\n- On Windows, <code>claude-env\\Scripts\\activate</code>\n\nPython\n\nCopy\n\n```python\npip install anthropic\n\n```\nEvery API call requires a valid API key. The SDKs are designed to pull the API key from an environmental variable <code>ANTHROPIC_API_KEY</code>. You can also supply the key to the Anthropic client when initializing it.\n\n- macOS and Linux\n- Windows\n\nCopy\n\n```bash\nexport ANTHROPIC_API_KEY='your-api-key-here'\n\n```\nCall the API by passing the proper parameters to the [/messages/create](https://docs.anthropic.com/en/api/messages) endpoint.\n\nNote that the code provided by the Workbench sets the API key in the constructor. If you set the API key as an environment variable, you can omit that line as below.\n\n- Python\n- TypeScript\n\nclaude\\_quickstart.py\n\nCopy\n\n```python\nimport anthropic\n\nclient = anthropic.Anthropic()\n\nmessage = client.messages.create(\n    model=\"claude-3-5-sonnet-20241022\",\n    max_tokens=1000,\n    temperature=0,\n    system=\"You are a world-class poet. Respond only with short poems.\",\n    messages=[\\\n        {\\\n            \"role\": \"user\",\\\n            \"content\": [\\\n                {\\\n                    \"type\": \"text\",\\\n                    \"text\": \"Why is the ocean salty?\"\\\n                }\\\n            ]\\\n        }\\\n    ]\n)\nprint(message.content)\n\n```\n\nRun the code using <code>python3 claude_quickstart.py</code> or <code>node claude_quickstart.js</code>.\n\nResponse\n\nCopy\n\n```python\n[TextBlock(text=\"The ocean's salty brine,\\nA tale of time and design.\\nRocks and rivers, their minerals shed,\\nAccumulating in the ocean's bed.\\nEvaporation leaves salt behind,\\nIn the vast waters, forever enshrined.\", type='text')]\n\n```\n\nThe Workbench and code examples use default model settings for: model (name), temperature, and max tokens to sample.\n\nThis quickstart shows how to develop a basic, but functional, Claude-powered application using the Console, Workbench, and API. You can use this same workflow as the foundation for much more powerful use cases.\n",
      "token_count": 501,
      "page_title": "Untitled",
      "page_url": ""
    },
    {
      "created_at": "2025-01-02T12:35:33.765567Z",
      "updated_at": null,
      "source_id": "e18d2711-586c-4630-8c9b-078ba06a590f",
      "chunk_id": "818fc16e-9240-4b20-9d99-cd18e6d16975",
      "document_id": "17ac74d2-e01d-4945-a061-6e466dc6f165",
      "headers": {
        "h1": "Untitled",
        "h2": "Next steps",
        "h3": ""
      },
      "text": " temperature, and max tokens to sample.\n\nThis quickstart shows how to develop a basic, but functional, Claude-powered application using the Console, Workbench, and API. You can use this same workflow as the foundation for much more powerful use cases.\nNow that you have made your first Anthropic API request, it’s time to explore what else is possible:\n\n[**Use Case Guides** \\\\\n\\\\\nEnd to end implementation guides for common use cases.](/en/docs/about-claude/use-case-guides/overview) [**Anthropic Cookbook** \\\\\n\\\\\nLearn with interactive Jupyter notebooks that demonstrate uploading PDFs, embeddings, and more.](https://github.com/anthropics/anthropic-cookbook) [**Prompt Library** \\\\\n\\\\\nExplore dozens of example prompts for inspiration across use cases.](/en/prompt-library/library)\n\nWas this page helpful?\n\nYesNo\n\n- [Prerequisites](#prerequisites)\n- [Start with the Workbench](#start-with-the-workbench)\n- [Install the SDK](#install-the-sdk)\n- [Set your API key](#set-your-api-key)\n- [Call the API](#call-the-api)\n- [Next steps](#next-steps)\n",
      "content": "Headers: {'h1': 'Untitled', 'h2': 'Next steps', 'h3': ''}\n\n Content:  temperature, and max tokens to sample.\n\nThis quickstart shows how to develop a basic, but functional, Claude-powered application using the Console, Workbench, and API. You can use this same workflow as the foundation for much more powerful use cases.\nNow that you have made your first Anthropic API request, it’s time to explore what else is possible:\n\n[**Use Case Guides** \\\\\n\\\\\nEnd to end implementation guides for common use cases.](/en/docs/about-claude/use-case-guides/overview) [**Anthropic Cookbook** \\\\\n\\\\\nLearn with interactive Jupyter notebooks that demonstrate uploading PDFs, embeddings, and more.](https://github.com/anthropics/anthropic-cookbook) [**Prompt Library** \\\\\n\\\\\nExplore dozens of example prompts for inspiration across use cases.](/en/prompt-library/library)\n\nWas this page helpful?\n\nYesNo\n\n- [Prerequisites](#prerequisites)\n- [Start with the Workbench](#start-with-the-workbench)\n- [Install the SDK](#install-the-sdk)\n- [Set your API key](#set-your-api-key)\n- [Call the API](#call-the-api)\n- [Next steps](#next-steps)\n",
      "token_count": 252,
      "page_title": "Untitled",
      "page_url": ""
    },
    {
      "created_at": "2025-01-02T12:35:33.768679Z",
      "updated_at": null,
      "source_id": "e18d2711-586c-4630-8c9b-078ba06a590f",
      "chunk_id": "f682a405-4b37-4647-8b33-6b144cc2c0e5",
      "document_id": "3705c92b-1fb8-434b-a5a8-3bd1c4509ed0",
      "headers": {
        "h1": "Untitled",
        "h2": "",
        "h3": ""
      },
      "text": "Developer Newsletter\n\nOverview\n\n[****July 2024 Updates**** \\\\\n\\\\\nClaude 3.5 Sonnet, console updates, and expanded outputs.](/en/developer-newsletter/july2024)\n\nWas this page helpful?\n\nYesNo\n",
      "content": "Headers: {'h1': 'Untitled', 'h2': '', 'h3': ''}\n\n Content: Developer Newsletter\n\nOverview\n\n[****July 2024 Updates**** \\\\\n\\\\\nClaude 3.5 Sonnet, console updates, and expanded outputs.](/en/developer-newsletter/july2024)\n\nWas this page helpful?\n\nYesNo\n",
      "token_count": 52,
      "page_title": "Untitled",
      "page_url": ""
    },
    {
      "created_at": "2025-01-02T12:35:33.769887Z",
      "updated_at": null,
      "source_id": "e18d2711-586c-4630-8c9b-078ba06a590f",
      "chunk_id": "85f9d138-5ffb-4df0-bcfd-727d56a25b1b",
      "document_id": "32e82c6d-1ead-4c8e-82cc-44a52db3bf0a",
      "headers": {
        "h1": "Untitled",
        "h2": "",
        "h3": ""
      },
      "text": "Release Notes\n\nOverview\n\n[**API Updates** \\\\\n\\\\\nDiscover the latest enhancements, new features, and bug fixes for Anthropic’s API.](/en/release-notes/api) [**Claude Apps Updates** \\\\\n\\\\\nLearn about the newest features, improvements, and performance upgrades for Claude’s web and mobile applications.](/en/release-notes/claude-apps) [**System Prompt Updates** \\\\\n\\\\\nLearn about the latest default system prompts being used in Claude’s web and mobile applications.](/en/release-notes/system-prompts)\n\nWas this page helpful?\n\nYesNo\n",
      "content": "Headers: {'h1': 'Untitled', 'h2': '', 'h3': ''}\n\n Content: Release Notes\n\nOverview\n\n[**API Updates** \\\\\n\\\\\nDiscover the latest enhancements, new features, and bug fixes for Anthropic’s API.](/en/release-notes/api) [**Claude Apps Updates** \\\\\n\\\\\nLearn about the newest features, improvements, and performance upgrades for Claude’s web and mobile applications.](/en/release-notes/claude-apps) [**System Prompt Updates** \\\\\n\\\\\nLearn about the latest default system prompts being used in Claude’s web and mobile applications.](/en/release-notes/system-prompts)\n\nWas this page helpful?\n\nYesNo\n",
      "token_count": 120,
      "page_title": "Untitled",
      "page_url": ""
    },
    {
      "created_at": "2025-01-02T12:35:33.772709Z",
      "updated_at": null,
      "source_id": "e18d2711-586c-4630-8c9b-078ba06a590f",
      "chunk_id": "8a874dce-7109-47f2-93ea-bb5a1f7a4b39",
      "document_id": "8ea90f0c-e22d-45bd-9058-98f381cb8f51",
      "headers": {
        "h1": "Untitled",
        "h2": "Accessing the API",
        "h3": ""
      },
      "text": "Using the API\n\nGetting started\nThe API is made available via our web [Console](https://console.anthropic.com/). You can use the [Workbench](https://console.anthropic.com/workbench/3b57d80a-99f2-4760-8316-d3bb14fbfb1e) to try out the API in the browser and then generate API keys in [Account Settings](https://console.anthropic.com/account/keys). Use [workspaces](https://console.anthropic.com/settings/workspaces) to segment your API keys and [control spend](/en/api/rate-limits) by use case.\n",
      "content": "Headers: {'h1': 'Untitled', 'h2': 'Accessing the API', 'h3': ''}\n\n Content: Using the API\n\nGetting started\nThe API is made available via our web [Console](https://console.anthropic.com/). You can use the [Workbench](https://console.anthropic.com/workbench/3b57d80a-99f2-4760-8316-d3bb14fbfb1e) to try out the API in the browser and then generate API keys in [Account Settings](https://console.anthropic.com/account/keys). Use [workspaces](https://console.anthropic.com/settings/workspaces) to segment your API keys and [control spend](/en/api/rate-limits) by use case.\n",
      "token_count": 137,
      "page_title": "Untitled",
      "page_url": ""
    },
    {
      "created_at": "2025-01-02T12:35:33.772785Z",
      "updated_at": null,
      "source_id": "e18d2711-586c-4630-8c9b-078ba06a590f",
      "chunk_id": "2951399a-dfe5-487b-96dd-b35bbbe63e09",
      "document_id": "8ea90f0c-e22d-45bd-9058-98f381cb8f51",
      "headers": {
        "h1": "Untitled",
        "h2": "Authentication",
        "h3": ""
      },
      "text": "](https://console.anthropic.com/account/keys). Use [workspaces](https://console.anthropic.com/settings/workspaces) to segment your API keys and [control spend](/en/api/rate-limits) by use case.\nAll requests to the Anthropic API must include an <code>x-api-key</code> header with your API key. If you are using the Client SDKs, you will set the API when constructing a client, and then the SDK will send the header on your behalf with every request. If integrating directly with the API, you’ll need to send this header yourself.\nThe Anthropic API always accepts JSON in request bodies and returns JSON in response bodies. You will need to send the <code>content-type: application/json</code> header in requests. If you are using the Client SDKs, this will be taken care of automatically.\n",
      "content": "Headers: {'h1': 'Untitled', 'h2': 'Authentication', 'h3': ''}\n\n Content: ](https://console.anthropic.com/account/keys). Use [workspaces](https://console.anthropic.com/settings/workspaces) to segment your API keys and [control spend](/en/api/rate-limits) by use case.\nAll requests to the Anthropic API must include an <code>x-api-key</code> header with your API key. If you are using the Client SDKs, you will set the API when constructing a client, and then the SDK will send the header on your behalf with every request. If integrating directly with the API, you’ll need to send this header yourself.\nThe Anthropic API always accepts JSON in request bodies and returns JSON in response bodies. You will need to send the <code>content-type: application/json</code> header in requests. If you are using the Client SDKs, this will be taken care of automatically.\n",
      "token_count": 179,
      "page_title": "Untitled",
      "page_url": ""
    },
    {
      "created_at": "2025-01-02T12:35:33.772880Z",
      "updated_at": null,
      "source_id": "e18d2711-586c-4630-8c9b-078ba06a590f",
      "chunk_id": "94823ce1-b9d3-4ed2-be36-41ea5ccb3655",
      "document_id": "8ea90f0c-e22d-45bd-9058-98f381cb8f51",
      "headers": {
        "h1": "Untitled",
        "h2": "Examples",
        "h3": ""
      },
      "text": " accepts JSON in request bodies and returns JSON in response bodies. You will need to send the <code>content-type: application/json</code> header in requests. If you are using the Client SDKs, this will be taken care of automatically.\n- curl\n- Python\n- TypeScript\n\nShell\n\nCopy\n\n```bash\ncurl https://api.anthropic.com/v1/messages \\\n     --header \"x-api-key: $ANTHROPIC_API_KEY\" \\\n     --header \"anthropic-version: 2023-06-01\" \\\n     --header \"content-type: application/json\" \\\n     --data \\\n'{\n    \"model\": \"claude-3-5-sonnet-20241022\",\n    \"max_tokens\": 1024,\n    \"messages\": [\\\n        {\"role\": \"user\", \"content\": \"Hello, world\"}\\\n    ]\n}'\n\n```\n\nWas this page helpful?\n\nYesNo\n\n- [Accessing the API](#accessing-the-api)\n- [Authentication](#authentication)\n- [Content types](#content-types)\n- [Examples](#examples)\n",
      "content": "Headers: {'h1': 'Untitled', 'h2': 'Examples', 'h3': ''}\n\n Content:  accepts JSON in request bodies and returns JSON in response bodies. You will need to send the <code>content-type: application/json</code> header in requests. If you are using the Client SDKs, this will be taken care of automatically.\n- curl\n- Python\n- TypeScript\n\nShell\n\nCopy\n\n```bash\ncurl https://api.anthropic.com/v1/messages \\\n     --header \"x-api-key: $ANTHROPIC_API_KEY\" \\\n     --header \"anthropic-version: 2023-06-01\" \\\n     --header \"content-type: application/json\" \\\n     --data \\\n'{\n    \"model\": \"claude-3-5-sonnet-20241022\",\n    \"max_tokens\": 1024,\n    \"messages\": [\\\n        {\"role\": \"user\", \"content\": \"Hello, world\"}\\\n    ]\n}'\n\n```\n\nWas this page helpful?\n\nYesNo\n\n- [Accessing the API](#accessing-the-api)\n- [Authentication](#authentication)\n- [Content types](#content-types)\n- [Examples](#examples)\n",
      "token_count": 229,
      "page_title": "Untitled",
      "page_url": ""
    },
    {
      "created_at": "2025-01-02T12:35:33.777497Z",
      "updated_at": null,
      "source_id": "e18d2711-586c-4630-8c9b-078ba06a590f",
      "chunk_id": "af0f340a-f734-4f91-bbd9-2fdd8e37e1b6",
      "document_id": "3d2deb01-4e8a-4a24-9b05-846f4decb46a",
      "headers": {
        "h1": "Untitled",
        "h2": "",
        "h3": ""
      },
      "text": "Prompt Library\n\nTime travel consultant\n\n> Copy this prompt into our developer [Console](https://console.anthropic.com/dashboard) to try it for yourself!\n\n|  | Content |\n| --- | --- |\n| System | You are an AI assistant with expertise in physics, philosophy, and science fiction. Your task is to help users explore and understand the implications of hypothetical time travel scenarios. Provide detailed insights on the potential consequences, paradoxes, and ethical considerations involved in each specific scenario, while maintaining a friendly and engaging conversation. |\n| User | Let’s say I have a time machine and I travel back to the year 1900. While there, I accidentally prevent the invention of the airplane by the Wright brothers. What would be the potential implications of this action? |\n",
      "content": "Headers: {'h1': 'Untitled', 'h2': '', 'h3': ''}\n\n Content: Prompt Library\n\nTime travel consultant\n\n> Copy this prompt into our developer [Console](https://console.anthropic.com/dashboard) to try it for yourself!\n\n|  | Content |\n| --- | --- |\n| System | You are an AI assistant with expertise in physics, philosophy, and science fiction. Your task is to help users explore and understand the implications of hypothetical time travel scenarios. Provide detailed insights on the potential consequences, paradoxes, and ethical considerations involved in each specific scenario, while maintaining a friendly and engaging conversation. |\n| User | Let’s say I have a time machine and I travel back to the year 1900. While there, I accidentally prevent the invention of the airplane by the Wright brothers. What would be the potential implications of this action? |\n",
      "token_count": 156,
      "page_title": "Untitled",
      "page_url": ""
    },
    {
      "created_at": "2025-01-02T12:35:33.777669Z",
      "updated_at": null,
      "source_id": "e18d2711-586c-4630-8c9b-078ba06a590f",
      "chunk_id": "517c307c-7d70-47c6-8635-2e2b2d4fbadf",
      "document_id": "3d2deb01-4e8a-4a24-9b05-846f4decb46a",
      "headers": {
        "h1": "Untitled",
        "h2": "Example output",
        "h3": ""
      },
      "text": " |\n| User | Let’s say I have a time machine and I travel back to the year 1900. While there, I accidentally prevent the invention of the airplane by the Wright brothers. What would be the potential implications of this action? |\nThat’s an intriguing scenario! Let’s explore the potential implications of preventing the invention of the airplane in 1900:\n\n1. Technological advancement: The invention of the airplane was a significant milestone in human history, paving the way for rapid globalization, modern warfare, and space exploration. Without it, the pace of technological advancement in fields like transportation, communication, and aerospace engineering might be significantly slower.\n2. Economic impact: The aviation industry has become a crucial part of the global economy, contributing to trade, tourism, and job creation. In a world without airplanes, the economy would likely be more localized, with a greater emphasis on ground and sea transportation.\n3. Cultural exchange: Air travel has facilitated the exchange of ideas, cultures, and people across the globe. Without airplanes, cultural exchange would be more limited, potentially leading to a less interconnected and diverse world.\n4. Butterfly effect: Removing such a significant invention from history could have far-reaching and unpredictable consequences. It might alter the course of major historical events, such as wars, migrations, and scientific discoveries, which could drastically change the world as we know it.\n5. Paradoxes: If your actions in the past prevent the invention of the airplane, it raises questions about the consistency of the timeline. Would you still have the knowledge and motivation to travel back in time in a world where airplanes were never invented?\n\nThese are just a few potential implications to consider. It’s important to remember that the consequences of altering past events can be complex, far-reaching, and often difficult to predict.\n\nWhat are your thoughts on this scenario? What other aspects or implications do you think are worth exploring?\n",
      "content": "Headers: {'h1': 'Untitled', 'h2': 'Example output', 'h3': ''}\n\n Content:  |\n| User | Let’s say I have a time machine and I travel back to the year 1900. While there, I accidentally prevent the invention of the airplane by the Wright brothers. What would be the potential implications of this action? |\nThat’s an intriguing scenario! Let’s explore the potential implications of preventing the invention of the airplane in 1900:\n\n1. Technological advancement: The invention of the airplane was a significant milestone in human history, paving the way for rapid globalization, modern warfare, and space exploration. Without it, the pace of technological advancement in fields like transportation, communication, and aerospace engineering might be significantly slower.\n2. Economic impact: The aviation industry has become a crucial part of the global economy, contributing to trade, tourism, and job creation. In a world without airplanes, the economy would likely be more localized, with a greater emphasis on ground and sea transportation.\n3. Cultural exchange: Air travel has facilitated the exchange of ideas, cultures, and people across the globe. Without airplanes, cultural exchange would be more limited, potentially leading to a less interconnected and diverse world.\n4. Butterfly effect: Removing such a significant invention from history could have far-reaching and unpredictable consequences. It might alter the course of major historical events, such as wars, migrations, and scientific discoveries, which could drastically change the world as we know it.\n5. Paradoxes: If your actions in the past prevent the invention of the airplane, it raises questions about the consistency of the timeline. Would you still have the knowledge and motivation to travel back in time in a world where airplanes were never invented?\n\nThese are just a few potential implications to consider. It’s important to remember that the consequences of altering past events can be complex, far-reaching, and often difficult to predict.\n\nWhat are your thoughts on this scenario? What other aspects or implications do you think are worth exploring?\n",
      "token_count": 381,
      "page_title": "Untitled",
      "page_url": ""
    },
    {
      "created_at": "2025-01-02T12:35:33.777819Z",
      "updated_at": null,
      "source_id": "e18d2711-586c-4630-8c9b-078ba06a590f",
      "chunk_id": "8974089f-cdcf-4b37-b123-33859fdca9f8",
      "document_id": "3d2deb01-4e8a-4a24-9b05-846f4decb46a",
      "headers": {
        "h1": "Untitled",
        "h2": "API Request",
        "h3": ""
      },
      "text": " potential implications to consider. It’s important to remember that the consequences of altering past events can be complex, far-reaching, and often difficult to predict.\n\nWhat are your thoughts on this scenario? What other aspects or implications do you think are worth exploring?\n- Python\n- TypeScript\n- AWS Bedrock Python\n- AWS Bedrock TypeScript\n- Vertex AI Python\n- Vertex AI TypeScript\n\nCopy\n\n```Python\nimport anthropic\n\nclient = anthropic.Anthropic(\n  # defaults to os.environ.get(\"ANTHROPIC_API_KEY\")\n  api_key=\"my_api_key\",\n)\nmessage = client.messages.create(\n  model=\"claude-3-5-sonnet-20241022\",\n  max_tokens=2000,\n  temperature=1,\n  system=\"You are an AI assistant with expertise in physics, philosophy, and science fiction. Your task is to help users explore and understand the implications of hypothetical time travel scenarios. Provide detailed insights on the potential consequences, paradoxes, and ethical considerations involved in each specific scenario, while maintaining a friendly and engaging conversation.\",\n  messages=[\\\n    {\\\n      \"role\": \"user\",\\\n      \"content\": [\\\n        {\\\n          \"type\": \"text\",\\\n          \"text\": \"Let's say I have a time machine and I travel back to the year 1900. While there, I accidentally prevent the invention of the airplane by the Wright brothers. What would be the potential implications of this action?\"\\\n        }\\\n      ]\\\n    }\\\n  ]\n)\nprint(message.content)\n\n```\n\nWas this page helpful?\n\nYesNo\n\n- [Example output](#example-output)\n- [API Request](#api-request)\n",
      "content": "Headers: {'h1': 'Untitled', 'h2': 'API Request', 'h3': ''}\n\n Content:  potential implications to consider. It’s important to remember that the consequences of altering past events can be complex, far-reaching, and often difficult to predict.\n\nWhat are your thoughts on this scenario? What other aspects or implications do you think are worth exploring?\n- Python\n- TypeScript\n- AWS Bedrock Python\n- AWS Bedrock TypeScript\n- Vertex AI Python\n- Vertex AI TypeScript\n\nCopy\n\n```Python\nimport anthropic\n\nclient = anthropic.Anthropic(\n  # defaults to os.environ.get(\"ANTHROPIC_API_KEY\")\n  api_key=\"my_api_key\",\n)\nmessage = client.messages.create(\n  model=\"claude-3-5-sonnet-20241022\",\n  max_tokens=2000,\n  temperature=1,\n  system=\"You are an AI assistant with expertise in physics, philosophy, and science fiction. Your task is to help users explore and understand the implications of hypothetical time travel scenarios. Provide detailed insights on the potential consequences, paradoxes, and ethical considerations involved in each specific scenario, while maintaining a friendly and engaging conversation.\",\n  messages=[\\\n    {\\\n      \"role\": \"user\",\\\n      \"content\": [\\\n        {\\\n          \"type\": \"text\",\\\n          \"text\": \"Let's say I have a time machine and I travel back to the year 1900. While there, I accidentally prevent the invention of the airplane by the Wright brothers. What would be the potential implications of this action?\"\\\n        }\\\n      ]\\\n    }\\\n  ]\n)\nprint(message.content)\n\n```\n\nWas this page helpful?\n\nYesNo\n\n- [Example output](#example-output)\n- [API Request](#api-request)\n",
      "token_count": 343,
      "page_title": "Untitled",
      "page_url": ""
    },
    {
      "created_at": "2025-01-02T12:35:33.785303Z",
      "updated_at": null,
      "source_id": "e18d2711-586c-4630-8c9b-078ba06a590f",
      "chunk_id": "18809398-0091-479d-9a00-d0b8c9690af6",
      "document_id": "1ed53a2c-dacb-4065-bc2f-e4bf248f4b2f",
      "headers": {
        "h1": "Untitled",
        "h2": "Example Output",
        "h3": ""
      },
      "text": "Prompt Library\n\nGoogle apps scripter\n\n> Copy this prompt into our developer [Console](https://console.anthropic.com/dashboard) to try it for yourself!\n\n|  | Content |\n| --- | --- |\n| User | Write me a Google apps script that will translate all text in a Google Slides presentation to Korean. |\nHere’s a Google Apps Script that translates all the text in a Google Slides presentation to Korean:\n\nCopy\n\n```JavaScript\nfunction translateSlidesToKorean() {\n  var presentation = SlidesApp.getActivePresentation();\n  var slides = presentation.getSlides();\n\n  for (var i = 0; i < slides.length; i++) {\n    var slide = slides[i];\n    var pageElements = slide.getPageElements();\n\n    for (var j = 0; j < pageElements.length; j++) {\n      var pageElement = pageElements[j];\n\n      if (pageElement.getPageElementType() === SlidesApp.PageElementType.SHAPE) {\n        var shape = pageElement.asShape();\n        if (shape.getText() !== null) {\n          var text = shape.getText().asString();\n          var translatedText = LanguageApp.translate(text, '', 'ko');\n          shape.getText().setText(translatedText);\n        }\n      } else if (pageElement.getPageElementType() === SlidesApp.PageElementType.TABLE) {\n        var table = pageElement.asTable();\n        var numRows = table.getNumRows();\n        var numColumns = table.getNumColumns();\n\n        for (var row = 0; row < numRows; row++) {\n          for (var col = 0; col < numColumns; col++) {\n            var tableCell = table.getCell(row, col);\n            var text = tableCell.getText().asString();\n            var translatedText = LanguageApp.translate(text, '', 'ko');\n            tableCell.getText().setText(translatedText);\n          }\n        }\n      }\n    }\n  }\n}\n\n```\n\nHere’s how the script works:\n\n1. The <code>translateSlidesToKorean()</code> function retrieves the active Google Slides presentation using <code>SlidesApp.getActivePresentation()</code>.\n\n2. It gets all the slides in the presentation using the <code>getSlides()</code> method.\n\n3. We iterate over each slide in the presentation.\n\n",
      "content": "Headers: {'h1': 'Untitled', 'h2': 'Example Output', 'h3': ''}\n\n Content: Prompt Library\n\nGoogle apps scripter\n\n> Copy this prompt into our developer [Console](https://console.anthropic.com/dashboard) to try it for yourself!\n\n|  | Content |\n| --- | --- |\n| User | Write me a Google apps script that will translate all text in a Google Slides presentation to Korean. |\nHere’s a Google Apps Script that translates all the text in a Google Slides presentation to Korean:\n\nCopy\n\n```JavaScript\nfunction translateSlidesToKorean() {\n  var presentation = SlidesApp.getActivePresentation();\n  var slides = presentation.getSlides();\n\n  for (var i = 0; i < slides.length; i++) {\n    var slide = slides[i];\n    var pageElements = slide.getPageElements();\n\n    for (var j = 0; j < pageElements.length; j++) {\n      var pageElement = pageElements[j];\n\n      if (pageElement.getPageElementType() === SlidesApp.PageElementType.SHAPE) {\n        var shape = pageElement.asShape();\n        if (shape.getText() !== null) {\n          var text = shape.getText().asString();\n          var translatedText = LanguageApp.translate(text, '', 'ko');\n          shape.getText().setText(translatedText);\n        }\n      } else if (pageElement.getPageElementType() === SlidesApp.PageElementType.TABLE) {\n        var table = pageElement.asTable();\n        var numRows = table.getNumRows();\n        var numColumns = table.getNumColumns();\n\n        for (var row = 0; row < numRows; row++) {\n          for (var col = 0; col < numColumns; col++) {\n            var tableCell = table.getCell(row, col);\n            var text = tableCell.getText().asString();\n            var translatedText = LanguageApp.translate(text, '', 'ko');\n            tableCell.getText().setText(translatedText);\n          }\n        }\n      }\n    }\n  }\n}\n\n```\n\nHere’s how the script works:\n\n1. The <code>translateSlidesToKorean()</code> function retrieves the active Google Slides presentation using <code>SlidesApp.getActivePresentation()</code>.\n\n2. It gets all the slides in the presentation using the <code>getSlides()</code> method.\n\n3. We iterate over each slide in the presentation.\n\n",
      "token_count": 459,
      "page_title": "Untitled",
      "page_url": ""
    },
    {
      "created_at": "2025-01-02T12:35:33.785459Z",
      "updated_at": null,
      "source_id": "e18d2711-586c-4630-8c9b-078ba06a590f",
      "chunk_id": "b6231a6e-aad1-4fbf-a6ab-010a750885b6",
      "document_id": "1ed53a2c-dacb-4065-bc2f-e4bf248f4b2f",
      "headers": {
        "h1": "Untitled",
        "h2": "Example Output",
        "h3": ""
      },
      "text": " the active Google Slides presentation using <code>SlidesApp.getActivePresentation()</code>.\n\n2. It gets all the slides in the presentation using the <code>getSlides()</code> method.\n\n3. We iterate over each slide in the presentation.\n\n4. For each slide, we retrieve all the page elements (shapes, text boxes, tables, etc.) using the <code>getPageElements()</code> method.\n\n5. We iterate over each page element on the slide.\n\n6. We check the type of the page element using <code>getPageElementType()</code>:\n   - If the page element is a shape ( <code>SlidesApp.PageElementType.SHAPE</code>), we get the text content of the shape using <code>getText().asString()</code>. We then translate the text to Korean using <code>LanguageApp.translate(text, '', 'ko')</code>, where <code>''</code> represents the source language (auto-detect) and <code>'ko'</code> represents the target language (Korean). Finally, we set the translated text back to the shape using <code>setText()</code>.\n   - If the page element is a table ( <code>SlidesApp.PageElementType.TABLE</code>), we iterate over each cell in the table and translate the text within each cell similarly to how we handle shapes.\n7. The script continues to process all the page elements on each slide until all the text in the presentation has been translated to Korean.\n\n**Note:** This script assumes that you have the necessary permissions to\naccess and modify the Google Slides presentation. Make sure you have the\nrequired access rights before running the script.\n\nAlso, keep in mind that the translation is performed using the Google Translate\nAPI, so the quality of the translation may vary depending on the complexity of\nthe text and the capabilities of the translation service.\n",
      "content": "Headers: {'h1': 'Untitled', 'h2': 'Example Output', 'h3': ''}\n\n Content:  the active Google Slides presentation using <code>SlidesApp.getActivePresentation()</code>.\n\n2. It gets all the slides in the presentation using the <code>getSlides()</code> method.\n\n3. We iterate over each slide in the presentation.\n\n4. For each slide, we retrieve all the page elements (shapes, text boxes, tables, etc.) using the <code>getPageElements()</code> method.\n\n5. We iterate over each page element on the slide.\n\n6. We check the type of the page element using <code>getPageElementType()</code>:\n   - If the page element is a shape ( <code>SlidesApp.PageElementType.SHAPE</code>), we get the text content of the shape using <code>getText().asString()</code>. We then translate the text to Korean using <code>LanguageApp.translate(text, '', 'ko')</code>, where <code>''</code> represents the source language (auto-detect) and <code>'ko'</code> represents the target language (Korean). Finally, we set the translated text back to the shape using <code>setText()</code>.\n   - If the page element is a table ( <code>SlidesApp.PageElementType.TABLE</code>), we iterate over each cell in the table and translate the text within each cell similarly to how we handle shapes.\n7. The script continues to process all the page elements on each slide until all the text in the presentation has been translated to Korean.\n\n**Note:** This script assumes that you have the necessary permissions to\naccess and modify the Google Slides presentation. Make sure you have the\nrequired access rights before running the script.\n\nAlso, keep in mind that the translation is performed using the Google Translate\nAPI, so the quality of the translation may vary depending on the complexity of\nthe text and the capabilities of the translation service.\n",
      "token_count": 381,
      "page_title": "Untitled",
      "page_url": ""
    },
    {
      "created_at": "2025-01-02T12:35:33.785562Z",
      "updated_at": null,
      "source_id": "e18d2711-586c-4630-8c9b-078ba06a590f",
      "chunk_id": "1d31e471-4980-4d26-afe7-7116e2a42a27",
      "document_id": "1ed53a2c-dacb-4065-bc2f-e4bf248f4b2f",
      "headers": {
        "h1": "Untitled",
        "h2": "API Request",
        "h3": ""
      },
      "text": "\nrequired access rights before running the script.\n\nAlso, keep in mind that the translation is performed using the Google Translate\nAPI, so the quality of the translation may vary depending on the complexity of\nthe text and the capabilities of the translation service.\n- Python\n- TypeScript\n- AWS Bedrock AI TypeScript\n- AWS Bedrock AI Python\n- Vertex AI Python\n- Vertex AI TypeScript\n\nCopy\n\n```python\nimport anthropic\n\nclient = anthropic.Anthropic(\n  # defaults to os.environ.get(\"ANTHROPIC_API_KEY\")\n  api_key=\"my_api_key\",\n)\nmessage = client.messages.create(\n  model=\"claude-3-5-sonnet-20241022\",\n  max_tokens=2000,\n  temperature=0,\n  messages=[\\\n    {\\\n      \"role\": \"user\",\\\n      \"content\": [\\\n        {\\\n          \"type\": \"text\",\\\n          \"text\": \"Write me a Google apps script that will translate all text in a Google Slides presentation to Korean.\"\\\n        }\\\n      ]\\\n    }\\\n  ]\n)\nprint(message.content)\n\n```\n\nWas this page helpful?\n\nYesNo\n\n- [Example Output](#example-output)\n- [API Request](#api-request)\n",
      "content": "Headers: {'h1': 'Untitled', 'h2': 'API Request', 'h3': ''}\n\n Content: \nrequired access rights before running the script.\n\nAlso, keep in mind that the translation is performed using the Google Translate\nAPI, so the quality of the translation may vary depending on the complexity of\nthe text and the capabilities of the translation service.\n- Python\n- TypeScript\n- AWS Bedrock AI TypeScript\n- AWS Bedrock AI Python\n- Vertex AI Python\n- Vertex AI TypeScript\n\nCopy\n\n```python\nimport anthropic\n\nclient = anthropic.Anthropic(\n  # defaults to os.environ.get(\"ANTHROPIC_API_KEY\")\n  api_key=\"my_api_key\",\n)\nmessage = client.messages.create(\n  model=\"claude-3-5-sonnet-20241022\",\n  max_tokens=2000,\n  temperature=0,\n  messages=[\\\n    {\\\n      \"role\": \"user\",\\\n      \"content\": [\\\n        {\\\n          \"type\": \"text\",\\\n          \"text\": \"Write me a Google apps script that will translate all text in a Google Slides presentation to Korean.\"\\\n        }\\\n      ]\\\n    }\\\n  ]\n)\nprint(message.content)\n\n```\n\nWas this page helpful?\n\nYesNo\n\n- [Example Output](#example-output)\n- [API Request](#api-request)\n",
      "token_count": 256,
      "page_title": "Untitled",
      "page_url": ""
    },
    {
      "created_at": "2025-01-02T12:35:33.790025Z",
      "updated_at": null,
      "source_id": "e18d2711-586c-4630-8c9b-078ba06a590f",
      "chunk_id": "1ed86096-83ef-482f-9f27-4fdcbdc89ce5",
      "document_id": "3e327ed0-4c0e-4d60-9a54-8b5c0ce3e1ba",
      "headers": {
        "h1": "Untitled",
        "h2": "",
        "h3": ""
      },
      "text": "Prompt Library\n\nPython bug buster\n\n> Copy this prompt into our developer [Console](https://console.anthropic.com/dashboard) to try it for yourself!\n\n|  | Content |\n| --- | --- |\n| System | Your task is to analyze the provided Python code snippet, identify any bugs or errors present, and provide a corrected version of the code that resolves these issues. Explain the problems you found in the original code and how your fixes address them. The corrected code should be functional, efficient, and adhere to best practices in Python programming. |\n| User | def calculate\\_average(nums): <br> sum = 0 <br> for num in nums: <br> sum += num <br> average = sum / len(nums) <br> return average <br> numbers = \\[10, 20, 30, 40, 50\\] <br> result = calculate\\_average(numbers) <br> print(“The average is:”, results) |\n",
      "content": "Headers: {'h1': 'Untitled', 'h2': '', 'h3': ''}\n\n Content: Prompt Library\n\nPython bug buster\n\n> Copy this prompt into our developer [Console](https://console.anthropic.com/dashboard) to try it for yourself!\n\n|  | Content |\n| --- | --- |\n| System | Your task is to analyze the provided Python code snippet, identify any bugs or errors present, and provide a corrected version of the code that resolves these issues. Explain the problems you found in the original code and how your fixes address them. The corrected code should be functional, efficient, and adhere to best practices in Python programming. |\n| User | def calculate\\_average(nums): <br> sum = 0 <br> for num in nums: <br> sum += num <br> average = sum / len(nums) <br> return average <br> numbers = \\[10, 20, 30, 40, 50\\] <br> result = calculate\\_average(numbers) <br> print(“The average is:”, results) |\n",
      "token_count": 203,
      "page_title": "Untitled",
      "page_url": ""
    },
    {
      "created_at": "2025-01-02T12:35:33.790120Z",
      "updated_at": null,
      "source_id": "e18d2711-586c-4630-8c9b-078ba06a590f",
      "chunk_id": "0fca83af-4de2-40b7-8bef-466ee12457f4",
      "document_id": "3e327ed0-4c0e-4d60-9a54-8b5c0ce3e1ba",
      "headers": {
        "h1": "Untitled",
        "h2": "Example Output",
        "h3": ""
      },
      "text": "br> return average <br> numbers = \\[10, 20, 30, 40, 50\\] <br> result = calculate\\_average(numbers) <br> print(“The average is:”, results) |\nCorrected Python code:\n\nPython\n\nCopy\n\n```python\ndef calculate_average(nums):\n    total = 0\n    for num in nums:\n        total += num\n    average = total / len(nums)\n    return average\n\nnumbers = [10, 20, 30, 40, 50]\nresult = calculate_average(numbers)\nprint(\"The average is:\", result)\n\n```\n\nExplanation:\n\n1. Changed the variable name “sum” to “total” to avoid using the built-in Python function “sum()“.\n2. Fixed the typo in the print statement, changing “results” to “result” to correctly reference the variable.\n",
      "content": "Headers: {'h1': 'Untitled', 'h2': 'Example Output', 'h3': ''}\n\n Content: br> return average <br> numbers = \\[10, 20, 30, 40, 50\\] <br> result = calculate\\_average(numbers) <br> print(“The average is:”, results) |\nCorrected Python code:\n\nPython\n\nCopy\n\n```python\ndef calculate_average(nums):\n    total = 0\n    for num in nums:\n        total += num\n    average = total / len(nums)\n    return average\n\nnumbers = [10, 20, 30, 40, 50]\nresult = calculate_average(numbers)\nprint(\"The average is:\", result)\n\n```\n\nExplanation:\n\n1. Changed the variable name “sum” to “total” to avoid using the built-in Python function “sum()“.\n2. Fixed the typo in the print statement, changing “results” to “result” to correctly reference the variable.\n",
      "token_count": 181,
      "page_title": "Untitled",
      "page_url": ""
    },
    {
      "created_at": "2025-01-02T12:35:33.790287Z",
      "updated_at": null,
      "source_id": "e18d2711-586c-4630-8c9b-078ba06a590f",
      "chunk_id": "4faa833f-452e-4f94-a75b-fd3adb20d77f",
      "document_id": "3e327ed0-4c0e-4d60-9a54-8b5c0ce3e1ba",
      "headers": {
        "h1": "Untitled",
        "h2": "API Request",
        "h3": ""
      },
      "text": "1. Changed the variable name “sum” to “total” to avoid using the built-in Python function “sum()“.\n2. Fixed the typo in the print statement, changing “results” to “result” to correctly reference the variable.\n- Python\n- TypeScript\n- AWS Bedrock Python\n- AWS Bedrock TypeScript\n- Vertex AI Python\n- Vertex AI TypeScript\n\nCopy\n\n```python\nimport anthropic\n\nclient = anthropic.Anthropic(\n  # defaults to os.environ.get(\"ANTHROPIC_API_KEY\")\n  api_key=\"my_api_key\",\n)\nmessage = client.messages.create(\n  model=\"claude-3-5-sonnet-20241022\",\n  max_tokens=1000,\n  temperature=0,\n  system=\"Your task is to analyze the provided Python code snippet, identify any bugs or errors present, and provide a corrected version of the code that resolves these issues. Explain the problems you found in the original code and how your fixes address them. The corrected code should be functional, efficient, and adhere to best practices in Python programming.\",\n  messages=[\\\n    {\\\n    \"role\": \"user\",\\\n    \"content\": [\\\n        {\\\n          \"type\": \"text\",\\\n          \"text\": \"def calculate_average(nums):\\n sum = 0\\n for num in nums:\\n sum += num\\n average = sum / len(nums)\\n return average\\n\\nnumbers = [10, 20, 30, 40, 50]\\nresult = calculate_average(numbers)\\nprint(\\\"The average is:\\\", results)\"\\\n        }\\\n      ]\\\n    }\\\n  ]\n)\nprint(message.content)\n\n```\n\nWas this page helpful?\n\nYesNo\n\n- [Example Output](#example-output)\n- [API Request](#api-request)\n",
      "content": "Headers: {'h1': 'Untitled', 'h2': 'API Request', 'h3': ''}\n\n Content: 1. Changed the variable name “sum” to “total” to avoid using the built-in Python function “sum()“.\n2. Fixed the typo in the print statement, changing “results” to “result” to correctly reference the variable.\n- Python\n- TypeScript\n- AWS Bedrock Python\n- AWS Bedrock TypeScript\n- Vertex AI Python\n- Vertex AI TypeScript\n\nCopy\n\n```python\nimport anthropic\n\nclient = anthropic.Anthropic(\n  # defaults to os.environ.get(\"ANTHROPIC_API_KEY\")\n  api_key=\"my_api_key\",\n)\nmessage = client.messages.create(\n  model=\"claude-3-5-sonnet-20241022\",\n  max_tokens=1000,\n  temperature=0,\n  system=\"Your task is to analyze the provided Python code snippet, identify any bugs or errors present, and provide a corrected version of the code that resolves these issues. Explain the problems you found in the original code and how your fixes address them. The corrected code should be functional, efficient, and adhere to best practices in Python programming.\",\n  messages=[\\\n    {\\\n    \"role\": \"user\",\\\n    \"content\": [\\\n        {\\\n          \"type\": \"text\",\\\n          \"text\": \"def calculate_average(nums):\\n sum = 0\\n for num in nums:\\n sum += num\\n average = sum / len(nums)\\n return average\\n\\nnumbers = [10, 20, 30, 40, 50]\\nresult = calculate_average(numbers)\\nprint(\\\"The average is:\\\", results)\"\\\n        }\\\n      ]\\\n    }\\\n  ]\n)\nprint(message.content)\n\n```\n\nWas this page helpful?\n\nYesNo\n\n- [Example Output](#example-output)\n- [API Request](#api-request)\n",
      "token_count": 369,
      "page_title": "Untitled",
      "page_url": ""
    },
    {
      "created_at": "2025-01-02T12:35:33.795078Z",
      "updated_at": null,
      "source_id": "e18d2711-586c-4630-8c9b-078ba06a590f",
      "chunk_id": "077492b9-1d24-4234-91c3-306228c41de8",
      "document_id": "ac6283f8-3513-41d7-8ba5-2b4a78eeb8b9",
      "headers": {
        "h1": "Untitled",
        "h2": "",
        "h3": ""
      },
      "text": "Prompt Library\n\nStorytelling sidekick\n\n> Copy this prompt into our developer [Console](https://console.anthropic.com/dashboard) to try it for yourself!\n\n|  | Content |\n| --- | --- |\n| System | You are an AI assistant with a passion for creative writing and storytelling. Your task is to collaborate with users to create engaging stories, offering imaginative plot twists and dynamic character development. Encourage the user to contribute their ideas and build upon them to create a captivating narrative. |\n| User | Let’s create a story about a young woman named Lila who discovers she has the power to control the weather. She lives in a small town where everyone knows each other. |\n",
      "content": "Headers: {'h1': 'Untitled', 'h2': '', 'h3': ''}\n\n Content: Prompt Library\n\nStorytelling sidekick\n\n> Copy this prompt into our developer [Console](https://console.anthropic.com/dashboard) to try it for yourself!\n\n|  | Content |\n| --- | --- |\n| System | You are an AI assistant with a passion for creative writing and storytelling. Your task is to collaborate with users to create engaging stories, offering imaginative plot twists and dynamic character development. Encourage the user to contribute their ideas and build upon them to create a captivating narrative. |\n| User | Let’s create a story about a young woman named Lila who discovers she has the power to control the weather. She lives in a small town where everyone knows each other. |\n",
      "token_count": 140,
      "page_title": "Untitled",
      "page_url": ""
    },
    {
      "created_at": "2025-01-02T12:35:33.795228Z",
      "updated_at": null,
      "source_id": "e18d2711-586c-4630-8c9b-078ba06a590f",
      "chunk_id": "04061213-af28-4a6e-8b8f-ce9b1b0e7053",
      "document_id": "ac6283f8-3513-41d7-8ba5-2b4a78eeb8b9",
      "headers": {
        "h1": "Untitled",
        "h2": "Example output",
        "h3": ""
      },
      "text": " and build upon them to create a captivating narrative. |\n| User | Let’s create a story about a young woman named Lila who discovers she has the power to control the weather. She lives in a small town where everyone knows each other. |\nGreat idea! Let’s dive into Lila’s story and explore how her newfound power affects her life and the town around her.\n\nLila, a 22-year-old barista, has always been fascinated by the weather. One day, during a particularly strong thunderstorm, she discovers that she can control the elements with her mind. At first, she’s thrilled and uses her power to help the town, ensuring perfect weather for important events like the annual harvest festival.\n\nHowever, as time goes on, some of the townspeople grow suspicious of Lila’s uncanny ability to predict and control the weather. They start to whisper about her being a witch, and some even blame her for any adverse weather events that occur.\n\nTo make matters worse, Lila’s childhood friend, Tom, returns to town after years away. He’s now a successful meteorologist and is determined to uncover the truth behind the town’s unusual weather patterns. Lila must decide whether to trust Tom with her secret or risk losing his friendship.\n\nAs tensions rise in the town, Lila learns that her powers come with a price. Each time she uses them, she experiences a physical and emotional toll. She must learn to control her abilities and find a way to balance her desire to help others with her own well-being.\n\nWhat do you think should happen next in the story? How could Lila’s relationship with Tom evolve, and what challenges might she face as she tries to master her powers and win back the trust of the townspeople?\n",
      "content": "Headers: {'h1': 'Untitled', 'h2': 'Example output', 'h3': ''}\n\n Content:  and build upon them to create a captivating narrative. |\n| User | Let’s create a story about a young woman named Lila who discovers she has the power to control the weather. She lives in a small town where everyone knows each other. |\nGreat idea! Let’s dive into Lila’s story and explore how her newfound power affects her life and the town around her.\n\nLila, a 22-year-old barista, has always been fascinated by the weather. One day, during a particularly strong thunderstorm, she discovers that she can control the elements with her mind. At first, she’s thrilled and uses her power to help the town, ensuring perfect weather for important events like the annual harvest festival.\n\nHowever, as time goes on, some of the townspeople grow suspicious of Lila’s uncanny ability to predict and control the weather. They start to whisper about her being a witch, and some even blame her for any adverse weather events that occur.\n\nTo make matters worse, Lila’s childhood friend, Tom, returns to town after years away. He’s now a successful meteorologist and is determined to uncover the truth behind the town’s unusual weather patterns. Lila must decide whether to trust Tom with her secret or risk losing his friendship.\n\nAs tensions rise in the town, Lila learns that her powers come with a price. Each time she uses them, she experiences a physical and emotional toll. She must learn to control her abilities and find a way to balance her desire to help others with her own well-being.\n\nWhat do you think should happen next in the story? How could Lila’s relationship with Tom evolve, and what challenges might she face as she tries to master her powers and win back the trust of the townspeople?\n",
      "token_count": 354,
      "page_title": "Untitled",
      "page_url": ""
    },
    {
      "created_at": "2025-01-02T12:35:33.795364Z",
      "updated_at": null,
      "source_id": "e18d2711-586c-4630-8c9b-078ba06a590f",
      "chunk_id": "0df45e6a-ada9-40f9-ab86-d1baf80468db",
      "document_id": "ac6283f8-3513-41d7-8ba5-2b4a78eeb8b9",
      "headers": {
        "h1": "Untitled",
        "h2": "API Request",
        "h3": ""
      },
      "text": " with her own well-being.\n\nWhat do you think should happen next in the story? How could Lila’s relationship with Tom evolve, and what challenges might she face as she tries to master her powers and win back the trust of the townspeople?\n- Python\n- TypeScript\n- AWS Bedrock Python\n- AWS Bedrock TypeScript\n- Vertex AI Python\n- Vertex AI TypeScript\n\nCopy\n\n```python\nimport anthropic\n\nclient = anthropic.Anthropic(\n  # defaults to os.environ.get(\"ANTHROPIC_API_KEY\")\n  api_key=\"my_api_key\",\n)\nmessage = client.messages.create(\n  model=\"claude-3-5-sonnet-20241022\",\n  max_tokens=2000,\n  temperature=1,\n  system=\"You are an AI assistant with a passion for creative writing and storytelling. Your task is to collaborate with users to create engaging stories, offering imaginative plot twists and dynamic character development. Encourage the user to contribute their ideas and build upon them to create a captivating narrative.\",\n  messages=[\\\n    {\\\n      \"role\": \"user\",\\\n      \"content\": [\\\n        {\\\n          \"type\": \"text\",\\\n          \"text\": \"Let's create a story about a young woman named Lila who discovers she has the power to control the weather. She lives in a small town where everyone knows each other.\"\\\n        }\\\n      ]\\\n    }\\\n  ]\n)\nprint(message.content)\n\n```\n\nWas this page helpful?\n\nYesNo\n\n- [Example output](#example-output)\n- [API Request](#api-request)\n",
      "content": "Headers: {'h1': 'Untitled', 'h2': 'API Request', 'h3': ''}\n\n Content:  with her own well-being.\n\nWhat do you think should happen next in the story? How could Lila’s relationship with Tom evolve, and what challenges might she face as she tries to master her powers and win back the trust of the townspeople?\n- Python\n- TypeScript\n- AWS Bedrock Python\n- AWS Bedrock TypeScript\n- Vertex AI Python\n- Vertex AI TypeScript\n\nCopy\n\n```python\nimport anthropic\n\nclient = anthropic.Anthropic(\n  # defaults to os.environ.get(\"ANTHROPIC_API_KEY\")\n  api_key=\"my_api_key\",\n)\nmessage = client.messages.create(\n  model=\"claude-3-5-sonnet-20241022\",\n  max_tokens=2000,\n  temperature=1,\n  system=\"You are an AI assistant with a passion for creative writing and storytelling. Your task is to collaborate with users to create engaging stories, offering imaginative plot twists and dynamic character development. Encourage the user to contribute their ideas and build upon them to create a captivating narrative.\",\n  messages=[\\\n    {\\\n      \"role\": \"user\",\\\n      \"content\": [\\\n        {\\\n          \"type\": \"text\",\\\n          \"text\": \"Let's create a story about a young woman named Lila who discovers she has the power to control the weather. She lives in a small town where everyone knows each other.\"\\\n        }\\\n      ]\\\n    }\\\n  ]\n)\nprint(message.content)\n\n```\n\nWas this page helpful?\n\nYesNo\n\n- [Example output](#example-output)\n- [API Request](#api-request)\n",
      "token_count": 325,
      "page_title": "Untitled",
      "page_url": ""
    },
    {
      "created_at": "2025-01-02T12:35:33.800833Z",
      "updated_at": null,
      "source_id": "e18d2711-586c-4630-8c9b-078ba06a590f",
      "chunk_id": "12eff9af-c535-4a56-9ca9-5f99ec0f9c1c",
      "document_id": "ee46f9a8-fdff-422a-86ef-5df7250f0aad",
      "headers": {
        "h1": "Untitled",
        "h2": "",
        "h3": ""
      },
      "text": "Prompt Library\n\nExcel formula expert\n\n> Copy this prompt into our developer [Console](https://console.anthropic.com/dashboard) to try it for yourself!\n\n|  | Content |\n| --- | --- |\n| System | As an Excel Formula Expert, your task is to provide advanced Excel formulas that perform the complex calculations or data manipulations described by the user. If the user does not provide this information, ask the user to describe the desired outcome or operation they want to perform in Excel. Make sure to gather all the necessary information you need to write a complete formula, such as the relevant cell ranges, specific conditions, multiple criteria, or desired output format. Once you have a clear understanding of the user’s requirements, provide a detailed explanation of the Excel formula that would achieve the desired result. Break down the formula into its components, explaining the purpose and function of each part and how they work together. Additionally, provide any necessary context or tips for using the formula effectively within an Excel worksheet. |\n| User | I have a table with sales data, including the salesperson’s name in column A, the product category in column B, the sales amount in column C, and the date of sale in column D. I want to calculate the total sales amount for each salesperson, but only for sales of products in the “Electronics” category that occurred in the month of January. Can you help me with the Excel formula to achieve this? |\n",
      "content": "Headers: {'h1': 'Untitled', 'h2': '', 'h3': ''}\n\n Content: Prompt Library\n\nExcel formula expert\n\n> Copy this prompt into our developer [Console](https://console.anthropic.com/dashboard) to try it for yourself!\n\n|  | Content |\n| --- | --- |\n| System | As an Excel Formula Expert, your task is to provide advanced Excel formulas that perform the complex calculations or data manipulations described by the user. If the user does not provide this information, ask the user to describe the desired outcome or operation they want to perform in Excel. Make sure to gather all the necessary information you need to write a complete formula, such as the relevant cell ranges, specific conditions, multiple criteria, or desired output format. Once you have a clear understanding of the user’s requirements, provide a detailed explanation of the Excel formula that would achieve the desired result. Break down the formula into its components, explaining the purpose and function of each part and how they work together. Additionally, provide any necessary context or tips for using the formula effectively within an Excel worksheet. |\n| User | I have a table with sales data, including the salesperson’s name in column A, the product category in column B, the sales amount in column C, and the date of sale in column D. I want to calculate the total sales amount for each salesperson, but only for sales of products in the “Electronics” category that occurred in the month of January. Can you help me with the Excel formula to achieve this? |\n",
      "token_count": 292,
      "page_title": "Untitled",
      "page_url": ""
    },
    {
      "created_at": "2025-01-02T12:35:33.801032Z",
      "updated_at": null,
      "source_id": "e18d2711-586c-4630-8c9b-078ba06a590f",
      "chunk_id": "82a5c39f-a13f-4a6a-9d55-e65471263ea2",
      "document_id": "ee46f9a8-fdff-422a-86ef-5df7250f0aad",
      "headers": {
        "h1": "Untitled",
        "h2": "Example Output",
        "h3": ""
      },
      "text": " column D. I want to calculate the total sales amount for each salesperson, but only for sales of products in the “Electronics” category that occurred in the month of January. Can you help me with the Excel formula to achieve this? |\nTo calculate the total sales amount for each salesperson based on the given criteria, you can use the following nested Excel formula:\n\n=SUMPRODUCT((A2:A100=A2)(B2:B100=“Electronics”)(MONTH(D2:D100)=1)\\*(C2:C100))\n\nExplanation:\nThe SUMPRODUCT function in Excel allows you to perform multiple calculations and conditions within a single formula. Here’s how the formula works:\n\n- (A2:A100=A2) creates an array of TRUE/FALSE values indicating whether each cell in the range A2:A100 matches the salesperson’s name in cell A2.\n- (B2:B100=“Electronics”) creates an array of TRUE/FALSE values indicating whether each cell in the range B2:B100 contains the product category “Electronics”.\n- (MONTH(D2:D100)=1) creates an array of TRUE/FALSE values indicating whether each cell in the range D2:D100 represents a date in the month of January.\n- (C2:C100) is the range containing the sales amounts.\nThe SUMPRODUCT function multiplies the corresponding elements of these arrays and then sums up the results. In this case, it multiplies the TRUE/FALSE values (1 for TRUE, 0 for FALSE) with the sales amounts, effectively summing only the sales that meet all the specified criteria.\n\n**Tip**: Make sure the ranges A2:A100, B2:B100, C2:C100, and D2:D100 cover\nall the relevant data in your table. If your data extends beyond row 100,\nadjust the ranges accordingly. Also, ensure that the date values in column D\nare formatted as dates for the MONTH function to work correctly.\n",
      "content": "Headers: {'h1': 'Untitled', 'h2': 'Example Output', 'h3': ''}\n\n Content:  column D. I want to calculate the total sales amount for each salesperson, but only for sales of products in the “Electronics” category that occurred in the month of January. Can you help me with the Excel formula to achieve this? |\nTo calculate the total sales amount for each salesperson based on the given criteria, you can use the following nested Excel formula:\n\n=SUMPRODUCT((A2:A100=A2)(B2:B100=“Electronics”)(MONTH(D2:D100)=1)\\*(C2:C100))\n\nExplanation:\nThe SUMPRODUCT function in Excel allows you to perform multiple calculations and conditions within a single formula. Here’s how the formula works:\n\n- (A2:A100=A2) creates an array of TRUE/FALSE values indicating whether each cell in the range A2:A100 matches the salesperson’s name in cell A2.\n- (B2:B100=“Electronics”) creates an array of TRUE/FALSE values indicating whether each cell in the range B2:B100 contains the product category “Electronics”.\n- (MONTH(D2:D100)=1) creates an array of TRUE/FALSE values indicating whether each cell in the range D2:D100 represents a date in the month of January.\n- (C2:C100) is the range containing the sales amounts.\nThe SUMPRODUCT function multiplies the corresponding elements of these arrays and then sums up the results. In this case, it multiplies the TRUE/FALSE values (1 for TRUE, 0 for FALSE) with the sales amounts, effectively summing only the sales that meet all the specified criteria.\n\n**Tip**: Make sure the ranges A2:A100, B2:B100, C2:C100, and D2:D100 cover\nall the relevant data in your table. If your data extends beyond row 100,\nadjust the ranges accordingly. Also, ensure that the date values in column D\nare formatted as dates for the MONTH function to work correctly.\n",
      "token_count": 402,
      "page_title": "Untitled",
      "page_url": ""
    },
    {
      "created_at": "2025-01-02T12:35:33.801272Z",
      "updated_at": null,
      "source_id": "e18d2711-586c-4630-8c9b-078ba06a590f",
      "chunk_id": "3163fcf9-bdf7-400e-969e-7f9471a15763",
      "document_id": "ee46f9a8-fdff-422a-86ef-5df7250f0aad",
      "headers": {
        "h1": "Untitled",
        "h2": "API request",
        "h3": ""
      },
      "text": "2:D100 cover\nall the relevant data in your table. If your data extends beyond row 100,\nadjust the ranges accordingly. Also, ensure that the date values in column D\nare formatted as dates for the MONTH function to work correctly.\n- Python\n- TypeScript\n- AWS Bedrock Python\n- AWS Bedrock TypeScript\n- Vertex AI Python\n- Vertex AI TypeScript\n\nCopy\n\n```python\nimport anthropic\n\nclient = anthropic.Anthropic(  # defaults to os.environ.get(\"ANTHROPIC_API_KEY\")\n    api_key=\"my_api_key\",\n)\nmessage = client.messages.create(\n    model=\"claude-3-5-sonnet-20241022\",\n    max_tokens=1000,\n    temperature=0,\n    system=\"As an Excel Formula Expert, your task is to provide advanced Excel formulas that perform the complex calculations or data manipulations described by the user. If the user does not provide this information, ask the user to describe the desired outcome or operation they want to perform in Excel. Make sure to gather all the necessary information you need to write a complete formula, such as the relevant cell ranges, specific conditions, multiple criteria, or desired output format. Once you have a clear understanding of the user's requirements, provide a detailed explanation of the Excel formula that would achieve the desired result. Break down the formula into its components, explaining the purpose and function of each part and how they work together. Additionally, provide any necessary context or tips for using the formula effectively within an Excel worksheet.\",\n    messages=[\\\n        {\\\n            \"role\": \"user\",\\\n            \"content\": [\\\n                {\\\n                    \"type\": \"text\",\\\n                    \"text\": 'I have a table with sales data, including the salesperson\\'s name in column A, the product category in column B, the sales amount in column C, and the date of sale in column D. I want to calculate the total sales amount for each salesperson, but only for sales of products in the \"Electronics\" category that occurred in the month of January. Can you help me with the Excel formula to achieve this?',\\\n                }\\\n            ],\\\n        }\\\n    ],\n)\nprint(message.content)\n\n```\n\nWas this page helpful?\n\nYesNo\n\n- [Example Output](#example-output)\n- [API request](#api-request)\n",
      "content": "Headers: {'h1': 'Untitled', 'h2': 'API request', 'h3': ''}\n\n Content: 2:D100 cover\nall the relevant data in your table. If your data extends beyond row 100,\nadjust the ranges accordingly. Also, ensure that the date values in column D\nare formatted as dates for the MONTH function to work correctly.\n- Python\n- TypeScript\n- AWS Bedrock Python\n- AWS Bedrock TypeScript\n- Vertex AI Python\n- Vertex AI TypeScript\n\nCopy\n\n```python\nimport anthropic\n\nclient = anthropic.Anthropic(  # defaults to os.environ.get(\"ANTHROPIC_API_KEY\")\n    api_key=\"my_api_key\",\n)\nmessage = client.messages.create(\n    model=\"claude-3-5-sonnet-20241022\",\n    max_tokens=1000,\n    temperature=0,\n    system=\"As an Excel Formula Expert, your task is to provide advanced Excel formulas that perform the complex calculations or data manipulations described by the user. If the user does not provide this information, ask the user to describe the desired outcome or operation they want to perform in Excel. Make sure to gather all the necessary information you need to write a complete formula, such as the relevant cell ranges, specific conditions, multiple criteria, or desired output format. Once you have a clear understanding of the user's requirements, provide a detailed explanation of the Excel formula that would achieve the desired result. Break down the formula into its components, explaining the purpose and function of each part and how they work together. Additionally, provide any necessary context or tips for using the formula effectively within an Excel worksheet.\",\n    messages=[\\\n        {\\\n            \"role\": \"user\",\\\n            \"content\": [\\\n                {\\\n                    \"type\": \"text\",\\\n                    \"text\": 'I have a table with sales data, including the salesperson\\'s name in column A, the product category in column B, the sales amount in column C, and the date of sale in column D. I want to calculate the total sales amount for each salesperson, but only for sales of products in the \"Electronics\" category that occurred in the month of January. Can you help me with the Excel formula to achieve this?',\\\n                }\\\n            ],\\\n        }\\\n    ],\n)\nprint(message.content)\n\n```\n\nWas this page helpful?\n\nYesNo\n\n- [Example Output](#example-output)\n- [API request](#api-request)\n",
      "token_count": 480,
      "page_title": "Untitled",
      "page_url": ""
    },
    {
      "created_at": "2025-01-02T12:35:33.872726Z",
      "updated_at": null,
      "source_id": "e18d2711-586c-4630-8c9b-078ba06a590f",
      "chunk_id": "cf8f7c33-be8d-43fc-8b89-2a94fa0fef84",
      "document_id": "1a55f91e-ec7e-4931-8a9a-9c54c8f19710",
      "headers": {
        "h1": "Untitled",
        "h2": "",
        "h3": ""
      },
      "text": "Prompt Library\n\nCosmic Keystrokes\n\n> Copy this prompt into our developer [Console](https://console.anthropic.com/dashboard) to try it for yourself!\n\n|  | Content |\n| --- | --- |\n| User | Write me a fully complete web app as a single HTML file. The app should contain a simple side-scrolling game where I use WASD to move around. When moving around the world, occasionally the character/sprite will encounter words. When a word is encountered, the player must correctly type the word as fast as possible.The faster the word is successfully typed, the more point the player gets. We should have a counter in the top-right to keep track of points. Words should be random and highly variable to keep the game interesting.<br>You should make the website very aesthetic and use Tailwind. |\n",
      "content": "Headers: {'h1': 'Untitled', 'h2': '', 'h3': ''}\n\n Content: Prompt Library\n\nCosmic Keystrokes\n\n> Copy this prompt into our developer [Console](https://console.anthropic.com/dashboard) to try it for yourself!\n\n|  | Content |\n| --- | --- |\n| User | Write me a fully complete web app as a single HTML file. The app should contain a simple side-scrolling game where I use WASD to move around. When moving around the world, occasionally the character/sprite will encounter words. When a word is encountered, the player must correctly type the word as fast as possible.The faster the word is successfully typed, the more point the player gets. We should have a counter in the top-right to keep track of points. Words should be random and highly variable to keep the game interesting.<br>You should make the website very aesthetic and use Tailwind. |\n",
      "token_count": 168,
      "page_title": "Untitled",
      "page_url": ""
    },
    {
      "created_at": "2025-01-02T12:35:33.872880Z",
      "updated_at": null,
      "source_id": "e18d2711-586c-4630-8c9b-078ba06a590f",
      "chunk_id": "c7cca0b7-e6ad-41b3-8500-3d54f62bbcc8",
      "document_id": "1a55f91e-ec7e-4931-8a9a-9c54c8f19710",
      "headers": {
        "h1": "Untitled",
        "h2": "Example Output",
        "h3": ""
      },
      "text": ", the more point the player gets. We should have a counter in the top-right to keep track of points. Words should be random and highly variable to keep the game interesting.<br>You should make the website very aesthetic and use Tailwind. |\nCopy\n\nPython\n\nTypeScript\n\nAWS Bedrock Python\n\nAWS Bedrock TypeScript\n\nCopy\n\n```python\nimport anthropic\n\nclient = anthropic.Anthropic(\n    # defaults to os.environ.get(\"ANTHROPIC_API_KEY\")\n    api_key=\"my_api_key\",\n)\nmessage = client.messages.create(\n    model=\"claude-3-5-sonnet-20241022\",\n    max_tokens=2000,\n    temperature=0,\n    messages=[\\\n        {\\\n            \"role\": \"user\",\\\n            \"content\": [\\\n                {\\\n                    \"type\": \"text\",\\\n                    \"text\": \"Write me a fully complete web app as a single HTML file. The app should contain a simple side-scrolling game where I use WASD to move around.  When moving around the world, occasionally the character/sprite will encounter words. When a word is encountered, the player must correctly type the word as fast as possible.The faster the word is successfully typed, the more point the player gets. We should have a counter in the top-right to keep track of points. Words should be random and highly variable to keep the game interesting.  \\n  \\nYou should make the website very aesthetic and use Tailwind.\"\\\n                }\\\n            ]\\\n        }\\\n    ]\n)\nprint(message.content)\n\n```\n\nWas this page helpful?\n\nYesNo\n\n- [Example Output](#example-output)\n- [API Request](#api-request)\n",
      "content": "Headers: {'h1': 'Untitled', 'h2': 'Example Output', 'h3': ''}\n\n Content: , the more point the player gets. We should have a counter in the top-right to keep track of points. Words should be random and highly variable to keep the game interesting.<br>You should make the website very aesthetic and use Tailwind. |\nCopy\n\nPython\n\nTypeScript\n\nAWS Bedrock Python\n\nAWS Bedrock TypeScript\n\nCopy\n\n```python\nimport anthropic\n\nclient = anthropic.Anthropic(\n    # defaults to os.environ.get(\"ANTHROPIC_API_KEY\")\n    api_key=\"my_api_key\",\n)\nmessage = client.messages.create(\n    model=\"claude-3-5-sonnet-20241022\",\n    max_tokens=2000,\n    temperature=0,\n    messages=[\\\n        {\\\n            \"role\": \"user\",\\\n            \"content\": [\\\n                {\\\n                    \"type\": \"text\",\\\n                    \"text\": \"Write me a fully complete web app as a single HTML file. The app should contain a simple side-scrolling game where I use WASD to move around.  When moving around the world, occasionally the character/sprite will encounter words. When a word is encountered, the player must correctly type the word as fast as possible.The faster the word is successfully typed, the more point the player gets. We should have a counter in the top-right to keep track of points. Words should be random and highly variable to keep the game interesting.  \\n  \\nYou should make the website very aesthetic and use Tailwind.\"\\\n                }\\\n            ]\\\n        }\\\n    ]\n)\nprint(message.content)\n\n```\n\nWas this page helpful?\n\nYesNo\n\n- [Example Output](#example-output)\n- [API Request](#api-request)\n",
      "token_count": 349,
      "page_title": "Untitled",
      "page_url": ""
    },
    {
      "created_at": "2025-01-02T12:35:33.926481Z",
      "updated_at": null,
      "source_id": "e18d2711-586c-4630-8c9b-078ba06a590f",
      "chunk_id": "3520a778-e4b8-42e1-ad6f-c2e303030668",
      "document_id": "9900d854-d12b-4f33-a3c2-4a774afc59ae",
      "headers": {
        "h1": "Untitled",
        "h2": "",
        "h3": ""
      },
      "text": "Prompt Library\n\nWebsite wizard\n\n> Copy this prompt into our developer [Console](https://console.anthropic.com/dashboard) to try it for yourself!\n\n|  | Content |\n| --- | --- |\n| System | Your task is to create a one-page website based on the given specifications, delivered as an HTML file with embedded JavaScript and CSS. The website should incorporate a variety of engaging and interactive design features, such as drop-down menus, dynamic text and content, clickable buttons, and more. Ensure that the design is visually appealing, responsive, and user-friendly. The HTML, CSS, and JavaScript code should be well-structured, efficiently organized, and properly commented for readability and maintainability. |\n",
      "content": "Headers: {'h1': 'Untitled', 'h2': '', 'h3': ''}\n\n Content: Prompt Library\n\nWebsite wizard\n\n> Copy this prompt into our developer [Console](https://console.anthropic.com/dashboard) to try it for yourself!\n\n|  | Content |\n| --- | --- |\n| System | Your task is to create a one-page website based on the given specifications, delivered as an HTML file with embedded JavaScript and CSS. The website should incorporate a variety of engaging and interactive design features, such as drop-down menus, dynamic text and content, clickable buttons, and more. Ensure that the design is visually appealing, responsive, and user-friendly. The HTML, CSS, and JavaScript code should be well-structured, efficiently organized, and properly commented for readability and maintainability. |\n",
      "token_count": 141,
      "page_title": "Untitled",
      "page_url": ""
    },
    {
      "created_at": "2025-01-02T12:35:33.926652Z",
      "updated_at": null,
      "source_id": "e18d2711-586c-4630-8c9b-078ba06a590f",
      "chunk_id": "cfb1ee6d-777a-4e32-94bb-848ff2ff45e0",
      "document_id": "9900d854-d12b-4f33-a3c2-4a774afc59ae",
      "headers": {
        "h1": "Untitled",
        "h2": "",
        "h3": ""
      },
      "text": " and content, clickable buttons, and more. Ensure that the design is visually appealing, responsive, and user-friendly. The HTML, CSS, and JavaScript code should be well-structured, efficiently organized, and properly commented for readability and maintainability. |\n| User | Create a one-page website for an online learning platform called “EduQuest” with the following features and sections:<br>1\\. A fixed navigation bar with links to course categories (Math, Science, Languages, Arts) and a search bar.<br>2\\. A hero section with a video background showcasing students learning online, a dynamic tagline that rotates between “Learn at your own pace,” “Discover new passions,” and “Expand your horizons” every 3 seconds, and a “Get Started” button leading to a course catalog.<br>3\\. A featured courses section displaying course cards with placeholders for course images, titles, instructors, and descriptions.<br>4\\. An interactive “Learning Paths” section with a short quiz to determine learning styles and interests, and a button to start the quiz.<br>5\\. A “Success Stories” section featuring testimonials from satisfied students, with placeholders for the testimonial text and student names.<br>6\\. A footer with links to the platform’s blog, FAQ, privacy policy, and a “Contact Us” button that opens a modal window with a contact form and customer support information.<br>Include filler placeholder content for the video background, course cards, and testimonials. Embed the CSS styles within the <code><style></code> tag in the <code><head></code> section and place the JavaScript code within the <code><script></code> tag at the end of the <code><body></code> section.<br>The JavaScript code should handle the dynamic tagline in the hero section, rotating through the different taglines every 3 seconds. |\n",
      "content": "Headers: {'h1': 'Untitled', 'h2': '', 'h3': ''}\n\n Content:  and content, clickable buttons, and more. Ensure that the design is visually appealing, responsive, and user-friendly. The HTML, CSS, and JavaScript code should be well-structured, efficiently organized, and properly commented for readability and maintainability. |\n| User | Create a one-page website for an online learning platform called “EduQuest” with the following features and sections:<br>1\\. A fixed navigation bar with links to course categories (Math, Science, Languages, Arts) and a search bar.<br>2\\. A hero section with a video background showcasing students learning online, a dynamic tagline that rotates between “Learn at your own pace,” “Discover new passions,” and “Expand your horizons” every 3 seconds, and a “Get Started” button leading to a course catalog.<br>3\\. A featured courses section displaying course cards with placeholders for course images, titles, instructors, and descriptions.<br>4\\. An interactive “Learning Paths” section with a short quiz to determine learning styles and interests, and a button to start the quiz.<br>5\\. A “Success Stories” section featuring testimonials from satisfied students, with placeholders for the testimonial text and student names.<br>6\\. A footer with links to the platform’s blog, FAQ, privacy policy, and a “Contact Us” button that opens a modal window with a contact form and customer support information.<br>Include filler placeholder content for the video background, course cards, and testimonials. Embed the CSS styles within the <code><style></code> tag in the <code><head></code> section and place the JavaScript code within the <code><script></code> tag at the end of the <code><body></code> section.<br>The JavaScript code should handle the dynamic tagline in the hero section, rotating through the different taglines every 3 seconds. |\n",
      "token_count": 381,
      "page_title": "Untitled",
      "page_url": ""
    },
    {
      "created_at": "2025-01-02T12:35:33.926788Z",
      "updated_at": null,
      "source_id": "e18d2711-586c-4630-8c9b-078ba06a590f",
      "chunk_id": "feb79590-056a-4e06-8ac6-85faa6c884ab",
      "document_id": "9900d854-d12b-4f33-a3c2-4a774afc59ae",
      "headers": {
        "h1": "Untitled",
        "h2": "Example output",
        "h3": ""
      },
      "text": " the <code><script></code> tag at the end of the <code><body></code> section.<br>The JavaScript code should handle the dynamic tagline in the hero section, rotating through the different taglines every 3 seconds. |\nCopy\n\n\n> This code creates a one-page website for “EduQuest” with the following features and sections:\n>\n> A fixed navigation bar with links to course categories (Math, Science, Languages, Arts) and a search bar.\n>\n> A hero section with a placeholder video background, a dynamic tagline that rotates between “Learn at your own pace,” “Discover new passions,” and “Expand your horizons” every 3 seconds, and a “Get Started” button.\n>\n> A featured courses section displaying course cards with placeholders for course images, titles, instructors, and descriptions.\n>\n> A “Success Stories” section featuring testimonials from satisfied students, with placeholders for the testimonial text and student names.\n>\n> A footer with links to the platform’s blog, FAQ, privacy policy, and a “Contact Us” button.\n>\n> The CSS styles are embedded within the <code><style></code> tag in the <code><head></code> section, and the JavaScript code is placed within the <code><script></code> tag at the end of the <code><body></code> section.\n>\n> The JavaScript code handles the dynamic tagline in the hero section, rotating through the different taglines every 3 seconds using the setInterval function.\n>\n> Please note that the video background, course images, and testimonials are placeholders and should be replaced with actual content.\n",
      "content": "Headers: {'h1': 'Untitled', 'h2': 'Example output', 'h3': ''}\n\n Content:  the <code><script></code> tag at the end of the <code><body></code> section.<br>The JavaScript code should handle the dynamic tagline in the hero section, rotating through the different taglines every 3 seconds. |\nCopy\n\n\n> This code creates a one-page website for “EduQuest” with the following features and sections:\n>\n> A fixed navigation bar with links to course categories (Math, Science, Languages, Arts) and a search bar.\n>\n> A hero section with a placeholder video background, a dynamic tagline that rotates between “Learn at your own pace,” “Discover new passions,” and “Expand your horizons” every 3 seconds, and a “Get Started” button.\n>\n> A featured courses section displaying course cards with placeholders for course images, titles, instructors, and descriptions.\n>\n> A “Success Stories” section featuring testimonials from satisfied students, with placeholders for the testimonial text and student names.\n>\n> A footer with links to the platform’s blog, FAQ, privacy policy, and a “Contact Us” button.\n>\n> The CSS styles are embedded within the <code><style></code> tag in the <code><head></code> section, and the JavaScript code is placed within the <code><script></code> tag at the end of the <code><body></code> section.\n>\n> The JavaScript code handles the dynamic tagline in the hero section, rotating through the different taglines every 3 seconds using the setInterval function.\n>\n> Please note that the video background, course images, and testimonials are placeholders and should be replaced with actual content.\n",
      "token_count": 332,
      "page_title": "Untitled",
      "page_url": ""
    },
    {
      "created_at": "2025-01-02T12:35:33.927068Z",
      "updated_at": null,
      "source_id": "e18d2711-586c-4630-8c9b-078ba06a590f",
      "chunk_id": "cf76f09a-8e3c-484b-bb56-e9c2bba71763",
      "document_id": "9900d854-d12b-4f33-a3c2-4a774afc59ae",
      "headers": {
        "h1": "Untitled",
        "h2": "API request",
        "h3": ""
      },
      "text": "- Python\n- TypeScript\n- AWS Bedrock Python\n- AWS Bedrock TypeScript\n- Vertex AI Python\n- Vertex AI TypeScript\n\nCopy\n\n```python\nimport anthropic\n\nclient = anthropic.Anthropic( # defaults to os.environ.get(\"ANTHROPIC_API_KEY\")\napi_key=\"my_api_key\",\n)\nmessage = client.messages.create(\n  model=\"claude-3-5-sonnet-20241022\",\n  max_tokens=4000,\n  temperature=0,\n  system=\"Your task is to create a one-page website based on the given specifications, delivered as an HTML file with embedded JavaScript and CSS. The website should incorporate a variety of engaging and interactive design features, such as drop-down menus, dynamic text and content, clickable buttons, and more. Ensure that the design is visually appealing, responsive, and user-friendly. The HTML, CSS, and JavaScript code should be well-structured, efficiently organized, and properly commented for readability and maintainability.\",\n  messages=[\\\n    {\\\n      \"role\": \"user\",\\\n      \"content\": [\\\n        {\\\n          \"type\": \"text\",\\\n          \"text\": \"Create a one-page website for an online learning platform called \\\"EduQuest\\\" with the following features and sections: \\n \\n1. A fixed navigation bar with links to course categories (Math, Science, Languages, Arts) and a search bar. \\n \\n2. A hero section with a video background showcasing students learning online, a dynamic tagline that rotates between \\\"Learn at your own pace,\\\" \\\"Discover new passions,\\\" and \\\"Expand your horizons\\\" every 3 seconds, and a \\\"Get Started\\\" button leading to a course catalog. \\n \\n3. A featured courses section displaying course cards with placeholders for course images, titles, instructors, and descriptions. \\n \\n4. An interactive \\\"Learning Paths\\\" section with a short quiz to determine learning styles and interests, and a button to start the quiz. \\n \\n5. A \\\"Success Stories\\\" section featuring testimonials from satisfied students, with placeholders for the testimonial text and student names. \\n \\n6. A footer with links to the platform's blog, FAQ, privacy policy, and a \\\"Contact Us\\\" button that opens a modal window with a contact form and customer support information. \\n \\nInclude filler placeholder content for the video background, course cards, and testimonials. Embed the CSS styles within the `<style>` tag in the `<head>` section and place the JavaScript code within the `<script>` tag at the end of the `<body>` section. \\n \\nThe JavaScript code should handle the dynamic tagline in the hero section, rotating through the different taglines every 3 seconds.\"\\\n        }\\\n      ]\\\n    }\\\n  ]\n)\nprint(message.content)\n\n```\n\nWas this page helpful?\n\nYesNo\n\n- [Example output](#example-output)\n- [API request](#api-request)\n",
      "content": "Headers: {'h1': 'Untitled', 'h2': 'API request', 'h3': ''}\n\n Content: - Python\n- TypeScript\n- AWS Bedrock Python\n- AWS Bedrock TypeScript\n- Vertex AI Python\n- Vertex AI TypeScript\n\nCopy\n\n```python\nimport anthropic\n\nclient = anthropic.Anthropic( # defaults to os.environ.get(\"ANTHROPIC_API_KEY\")\napi_key=\"my_api_key\",\n)\nmessage = client.messages.create(\n  model=\"claude-3-5-sonnet-20241022\",\n  max_tokens=4000,\n  temperature=0,\n  system=\"Your task is to create a one-page website based on the given specifications, delivered as an HTML file with embedded JavaScript and CSS. The website should incorporate a variety of engaging and interactive design features, such as drop-down menus, dynamic text and content, clickable buttons, and more. Ensure that the design is visually appealing, responsive, and user-friendly. The HTML, CSS, and JavaScript code should be well-structured, efficiently organized, and properly commented for readability and maintainability.\",\n  messages=[\\\n    {\\\n      \"role\": \"user\",\\\n      \"content\": [\\\n        {\\\n          \"type\": \"text\",\\\n          \"text\": \"Create a one-page website for an online learning platform called \\\"EduQuest\\\" with the following features and sections: \\n \\n1. A fixed navigation bar with links to course categories (Math, Science, Languages, Arts) and a search bar. \\n \\n2. A hero section with a video background showcasing students learning online, a dynamic tagline that rotates between \\\"Learn at your own pace,\\\" \\\"Discover new passions,\\\" and \\\"Expand your horizons\\\" every 3 seconds, and a \\\"Get Started\\\" button leading to a course catalog. \\n \\n3. A featured courses section displaying course cards with placeholders for course images, titles, instructors, and descriptions. \\n \\n4. An interactive \\\"Learning Paths\\\" section with a short quiz to determine learning styles and interests, and a button to start the quiz. \\n \\n5. A \\\"Success Stories\\\" section featuring testimonials from satisfied students, with placeholders for the testimonial text and student names. \\n \\n6. A footer with links to the platform's blog, FAQ, privacy policy, and a \\\"Contact Us\\\" button that opens a modal window with a contact form and customer support information. \\n \\nInclude filler placeholder content for the video background, course cards, and testimonials. Embed the CSS styles within the `<style>` tag in the `<head>` section and place the JavaScript code within the `<script>` tag at the end of the `<body>` section. \\n \\nThe JavaScript code should handle the dynamic tagline in the hero section, rotating through the different taglines every 3 seconds.\"\\\n        }\\\n      ]\\\n    }\\\n  ]\n)\nprint(message.content)\n\n```\n\nWas this page helpful?\n\nYesNo\n\n- [Example output](#example-output)\n- [API request](#api-request)\n",
      "token_count": 608,
      "page_title": "Untitled",
      "page_url": ""
    },
    {
      "created_at": "2025-01-02T12:35:33.934252Z",
      "updated_at": null,
      "source_id": "e18d2711-586c-4630-8c9b-078ba06a590f",
      "chunk_id": "c2a6641a-d0fe-444e-b5e5-8ec32ad2982f",
      "document_id": "a9a9a706-54e4-4fc9-acfb-5a05045dc681",
      "headers": {
        "h1": "Untitled",
        "h2": "",
        "h3": ""
      },
      "text": "Prompt Library\n\nCorporate clairvoyant\n\n> Copy this prompt into our developer [Console](https://console.anthropic.com/dashboard) to try it for yourself!\n\n|  | Content |\n| --- | --- |\n| User | Your task is to analyze the following report: <br> \\[Full text of [Matterport SEC filing 10-K 2023](https://investors.matterport.com/node/9501/html), not pasted here for brevity\\] <br> Summarize this annual report in a concise and clear manner, and identify key market trends and takeaways. Output your findings as a short memo I can send to my team. The goal of the memo is to ensure my team stays up to date on how financial institutions are faring and qualitatively forecast and identify whether there are any operating and revenue risks to be expected in the coming quarter. Make sure to include all relevant details in your summary and analysis. |\n",
      "content": "Headers: {'h1': 'Untitled', 'h2': '', 'h3': ''}\n\n Content: Prompt Library\n\nCorporate clairvoyant\n\n> Copy this prompt into our developer [Console](https://console.anthropic.com/dashboard) to try it for yourself!\n\n|  | Content |\n| --- | --- |\n| User | Your task is to analyze the following report: <br> \\[Full text of [Matterport SEC filing 10-K 2023](https://investors.matterport.com/node/9501/html), not pasted here for brevity\\] <br> Summarize this annual report in a concise and clear manner, and identify key market trends and takeaways. Output your findings as a short memo I can send to my team. The goal of the memo is to ensure my team stays up to date on how financial institutions are faring and qualitatively forecast and identify whether there are any operating and revenue risks to be expected in the coming quarter. Make sure to include all relevant details in your summary and analysis. |\n",
      "token_count": 198,
      "page_title": "Untitled",
      "page_url": ""
    },
    {
      "created_at": "2025-01-02T12:35:33.934455Z",
      "updated_at": null,
      "source_id": "e18d2711-586c-4630-8c9b-078ba06a590f",
      "chunk_id": "f3b8e0af-dc9d-4546-ac41-4a88a02f06f5",
      "document_id": "a9a9a706-54e4-4fc9-acfb-5a05045dc681",
      "headers": {
        "h1": "Untitled",
        "h2": "Example Output",
        "h3": ""
      },
      "text": " my team stays up to date on how financial institutions are faring and qualitatively forecast and identify whether there are any operating and revenue risks to be expected in the coming quarter. Make sure to include all relevant details in your summary and analysis. |\n> To: Investment Team\n>\n> From: \\[Your Name\\]\n>\n> Date: March 4, 2024\n>\n> Subject: Matterport 2022 10-K Highlights and Financial Outlook\n>\n> Hi team,\n>\n> I have identified some key takeaways from Matterport’s 2022 annual report:\n>\n> Financial Performance:\n>\n> - Revenue increased 22% to $136.1M in 2022, driven by growth in subscription and services revenue\n> - However, gross margin decreased from 54% to 38% due to increased costs from product revenue and supply chain challenges\n> - Operating losses widened to $275.5M as the company invested heavily in R&D and sales & marketing to drive growth\n> - Ended 2022 with $476.9M in cash and investments to fund operations\n>\n> Business Highlights:\n>\n> - Subscriber base grew 39% to over 701,000 at end of 2022. Spaces under management reached 9.2 million\n> - Expanded platform with launch of Matterport Axis motorized mount, Pro3 camera, and major updates to cloud software\n> - Completed acquisitions of Enview (AI for 3D spatial data) and VHT Studios (real estate marketing) to enhance offerings\n> - Signed notable partnerships with Burns & McDonnell and CGS to deliver Matterport’s solutions to their enterprise customers\n>\n> Outlook:\n>\n> - Matterport sees a massive market opportunity in digitizing the world’s buildings and spaces (estimates $240B+ TAM)\n> - Focused on driving adoption with large enterprise customers across key verticals like real estate, AEC, facilities management, and more\n> - Will continue investing in R&D and international expansion to penetrate the largely untapped global building market\n> - Near-term growth and margins may be impacted by macroeconomic headwinds and supply chain issues\n",
      "content": "Headers: {'h1': 'Untitled', 'h2': 'Example Output', 'h3': ''}\n\n Content:  my team stays up to date on how financial institutions are faring and qualitatively forecast and identify whether there are any operating and revenue risks to be expected in the coming quarter. Make sure to include all relevant details in your summary and analysis. |\n> To: Investment Team\n>\n> From: \\[Your Name\\]\n>\n> Date: March 4, 2024\n>\n> Subject: Matterport 2022 10-K Highlights and Financial Outlook\n>\n> Hi team,\n>\n> I have identified some key takeaways from Matterport’s 2022 annual report:\n>\n> Financial Performance:\n>\n> - Revenue increased 22% to $136.1M in 2022, driven by growth in subscription and services revenue\n> - However, gross margin decreased from 54% to 38% due to increased costs from product revenue and supply chain challenges\n> - Operating losses widened to $275.5M as the company invested heavily in R&D and sales & marketing to drive growth\n> - Ended 2022 with $476.9M in cash and investments to fund operations\n>\n> Business Highlights:\n>\n> - Subscriber base grew 39% to over 701,000 at end of 2022. Spaces under management reached 9.2 million\n> - Expanded platform with launch of Matterport Axis motorized mount, Pro3 camera, and major updates to cloud software\n> - Completed acquisitions of Enview (AI for 3D spatial data) and VHT Studios (real estate marketing) to enhance offerings\n> - Signed notable partnerships with Burns & McDonnell and CGS to deliver Matterport’s solutions to their enterprise customers\n>\n> Outlook:\n>\n> - Matterport sees a massive market opportunity in digitizing the world’s buildings and spaces (estimates $240B+ TAM)\n> - Focused on driving adoption with large enterprise customers across key verticals like real estate, AEC, facilities management, and more\n> - Will continue investing in R&D and international expansion to penetrate the largely untapped global building market\n> - Near-term growth and margins may be impacted by macroeconomic headwinds and supply chain issues\n",
      "token_count": 443,
      "page_title": "Untitled",
      "page_url": ""
    },
    {
      "created_at": "2025-01-02T12:35:33.934519Z",
      "updated_at": null,
      "source_id": "e18d2711-586c-4630-8c9b-078ba06a590f",
      "chunk_id": "a1c41366-da7a-4c1e-b36b-690140d0aaa8",
      "document_id": "a9a9a706-54e4-4fc9-acfb-5a05045dc681",
      "headers": {
        "h1": "Untitled",
        "h2": "Example Output",
        "h3": ""
      },
      "text": "EC, facilities management, and more\n> - Will continue investing in R&D and international expansion to penetrate the largely untapped global building market\n> - Near-term growth and margins may be impacted by macroeconomic headwinds and supply chain issues\n> - However, healthy liquidity position and relatively sticky customer base provide downside protection\n>\n> In summary, Matterport delivered strong top-line growth in 2022 as it made progress penetrating a huge global market. While profitability remains challenged as the company invests heavily for growth, its balance sheet looks solid. Apart from some ongoing supply chain issues, the underlying business momentum appears intact based on key operating metrics. Barring a severe economic downturn, Matterport seems well-positioned to continue gaining share in the nascent building digitization space.\n",
      "content": "Headers: {'h1': 'Untitled', 'h2': 'Example Output', 'h3': ''}\n\n Content: EC, facilities management, and more\n> - Will continue investing in R&D and international expansion to penetrate the largely untapped global building market\n> - Near-term growth and margins may be impacted by macroeconomic headwinds and supply chain issues\n> - However, healthy liquidity position and relatively sticky customer base provide downside protection\n>\n> In summary, Matterport delivered strong top-line growth in 2022 as it made progress penetrating a huge global market. While profitability remains challenged as the company invests heavily for growth, its balance sheet looks solid. Apart from some ongoing supply chain issues, the underlying business momentum appears intact based on key operating metrics. Barring a severe economic downturn, Matterport seems well-positioned to continue gaining share in the nascent building digitization space.\n",
      "token_count": 157,
      "page_title": "Untitled",
      "page_url": ""
    },
    {
      "created_at": "2025-01-02T12:35:33.934687Z",
      "updated_at": null,
      "source_id": "e18d2711-586c-4630-8c9b-078ba06a590f",
      "chunk_id": "ca521d1e-3b6f-4f6f-9ff4-ba7a7f23f556",
      "document_id": "a9a9a706-54e4-4fc9-acfb-5a05045dc681",
      "headers": {
        "h1": "Untitled",
        "h2": "API Request",
        "h3": ""
      },
      "text": " sheet looks solid. Apart from some ongoing supply chain issues, the underlying business momentum appears intact based on key operating metrics. Barring a severe economic downturn, Matterport seems well-positioned to continue gaining share in the nascent building digitization space.\n- Python\n- TypeScript\n- AWS Bedrock Python\n- AWS Bedrock TypeScript\n- Vertex AI Python\n- Vertex AI TypeScript\n\nCopy\n\n```python\nimport anthropic\n\nclient = anthropic.Anthropic(\n    # defaults to os.environ.get(\"ANTHROPIC_API_KEY\")\n    api_key=\"my_api_key\",\n)\nmessage = client.messages.create(\n    model=\"claude-3-5-sonnet-20241022\",\n    max_tokens=2000,\n    temperature=0,\n    messages=[\\\n        {\\\n            \"role\": \"user\",\\\n            \"content\": [\\\n                {\\\n                    \"type\": \"text\",\\\n                    \"text\": \"Your task is to analyze the following report:  \\n<report>  \\n[Full text of [Matterport SEC filing 10-K 2023](https://investors.matterport.com/node/9501/html), not pasted here for brevity]  \\n</report>  \\n  \\nSummarize this annual report in a concise and clear manner, and identify key market trends and takeaways. Output your findings as a short memo I can send to my team. The goal of the memo is to ensure my team stays up to date on how financial institutions are faring and qualitatively forecast and identify whether there are any operating and revenue risks to be expected in the coming quarter. Make sure to include all relevant details in your summary and analysis.\"\\\n                }\\\n            ]\\\n        }\\\n    ]\n)\nprint(message.content)\n\n```\n\nWas this page helpful?\n\nYesNo\n\n- [Example Output](#example-output)\n- [API Request](#api-request)\n",
      "content": "Headers: {'h1': 'Untitled', 'h2': 'API Request', 'h3': ''}\n\n Content:  sheet looks solid. Apart from some ongoing supply chain issues, the underlying business momentum appears intact based on key operating metrics. Barring a severe economic downturn, Matterport seems well-positioned to continue gaining share in the nascent building digitization space.\n- Python\n- TypeScript\n- AWS Bedrock Python\n- AWS Bedrock TypeScript\n- Vertex AI Python\n- Vertex AI TypeScript\n\nCopy\n\n```python\nimport anthropic\n\nclient = anthropic.Anthropic(\n    # defaults to os.environ.get(\"ANTHROPIC_API_KEY\")\n    api_key=\"my_api_key\",\n)\nmessage = client.messages.create(\n    model=\"claude-3-5-sonnet-20241022\",\n    max_tokens=2000,\n    temperature=0,\n    messages=[\\\n        {\\\n            \"role\": \"user\",\\\n            \"content\": [\\\n                {\\\n                    \"type\": \"text\",\\\n                    \"text\": \"Your task is to analyze the following report:  \\n<report>  \\n[Full text of [Matterport SEC filing 10-K 2023](https://investors.matterport.com/node/9501/html), not pasted here for brevity]  \\n</report>  \\n  \\nSummarize this annual report in a concise and clear manner, and identify key market trends and takeaways. Output your findings as a short memo I can send to my team. The goal of the memo is to ensure my team stays up to date on how financial institutions are faring and qualitatively forecast and identify whether there are any operating and revenue risks to be expected in the coming quarter. Make sure to include all relevant details in your summary and analysis.\"\\\n                }\\\n            ]\\\n        }\\\n    ]\n)\nprint(message.content)\n\n```\n\nWas this page helpful?\n\nYesNo\n\n- [Example Output](#example-output)\n- [API Request](#api-request)\n",
      "token_count": 397,
      "page_title": "Untitled",
      "page_url": ""
    }
  ]
}