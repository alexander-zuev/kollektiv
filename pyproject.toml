[tool.poetry]
name = "omni-claude"
version = "0.1.2"
description = ""
authors = ["AZ <azuev@outlook.com>"]
readme = "README.md"
package-mode = false
packages = [{include = "src"}]

[tool.poetry.dependencies]
python = "^3.12"
anthropic = "^0.34.1"
openai = "^1.42.0"
colorama = "^0.4.6"
requests = "^2.32.3"
tiktoken = "^0.7.0"
markdown = "^3.7"
google-cloud-aiplatform = "^1.64.0"
llama-index = "^0.11.3"
cohere = "^5.9.0"
firecrawl-py = "^1.2.3"
pydantic = "^2.9.0"
pytest = "^8.3.3"
black = "^24.8.0"
flake8 = "^7.1.1"
pre-commit = "^3.8.0"
chromadb = "^0.5.5"
protobuf = "3.20.3"
jq = "^1.8.0"
ragas = "^0.1.20"
weave = "^0.51.12"
wandb = "^0.18.3"


[tool.black]
line-length = 120
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 120

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q"
testpaths = ["tests"]
pythonpath = [
    ".",
    "src",
]

[tool.coverage.run]
source = ["src"]

[tool.poetry.scripts]
omni-claude = "python app.py"
chunker = "python src/processing/chunking.py"


[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "pass",
    "except ImportError:",
]


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
