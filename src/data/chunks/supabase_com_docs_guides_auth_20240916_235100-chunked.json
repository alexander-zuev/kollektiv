[
  {
    "chunk_id": "9ae563ab-8ae1-4037-be0f-a2127c7b4388",
    "metadata": {
      "token_count": 104,
      "source_url": "https://supabase.com/docs/guides/auth/architecture",
      "page_title": "Auth architecture | Supabase Docs"
    },
    "data": {
      "headers": {
        "h1": "Auth architecture",
        "h2": "The architecture behind Supabase Auth.",
        "h3": ""
      },
      "text": "Auth\nThere are four major layers to Supabase Auth:\n\n1. [Client layer.](#client-layer) This can be one of the Supabase client SDKs, or manually made HTTP requests using the HTTP client of your choice.\n2. Kong API gateway. This is shared between all Supabase products.\n3. [Auth service](#auth-service) (formerly known as GoTrue).\n4. [Postgres database.](#postgres) This is shared between all Supabase products.\n"
    }
  },
  {
    "chunk_id": "bd82bbae-c866-434d-9f2c-7242a84fc46a",
    "metadata": {
      "token_count": 264,
      "source_url": "https://supabase.com/docs/guides/auth/architecture",
      "page_title": "Auth architecture | Supabase Docs"
    },
    "data": {
      "headers": {
        "h1": "Auth architecture",
        "h2": "Client layer \\#",
        "h3": ""
      },
      "text": " gateway. This is shared between all Supabase products.\n3. [Auth service](#auth-service) (formerly known as GoTrue).\n4. [Postgres database.](#postgres) This is shared between all Supabase products.\nThe client layer runs in your app. This could be running in many places, including:\n\n- Your frontend browser code\n- Your backend server code\n- Your native application\n\nThe client layer provides the functions that you use to sign in and manage users. We recommend using the Supabase client SDKs, which handle:\n\n- Configuration and authentication of HTTP calls to the Supabase Auth backend\n- Persistence, refresh, and removal of Auth Tokens in your app's storage medium\n- Integration with other Supabase products\n\nBut at its core, this layer manages the making of HTTP calls, so you could write your own client layer if you wanted to.\n\nSee the Client SDKs for more information:\n\n- [JavaScript](/docs/reference/javascript/introduction)\n- [Flutter](/docs/reference/dart/introduction)\n- [Swift](/docs/reference/swift/introduction)\n- [Python](/docs/reference/python/introduction)\n- [C#](/docs/reference/csharp/introduction)\n- [Kotlin](/docs/reference/kotlin/introduction)\n"
    }
  },
  {
    "chunk_id": "64f63f0e-db1b-4d0d-be61-92fc01202610",
    "metadata": {
      "token_count": 171,
      "source_url": "https://supabase.com/docs/guides/auth/architecture",
      "page_title": "Auth architecture | Supabase Docs"
    },
    "data": {
      "headers": {
        "h1": "Auth architecture",
        "h2": "Auth service \\#",
        "h3": ""
      },
      "text": ")\n- [Swift](/docs/reference/swift/introduction)\n- [Python](/docs/reference/python/introduction)\n- [C#](/docs/reference/csharp/introduction)\n- [Kotlin](/docs/reference/kotlin/introduction)\nThe [Auth service](https://github.com/supabase/auth) is an Auth API server written and maintained by Supabase. It is a fork of the GoTrue project, originally created by Netlify.\n\nWhen you deploy a new Supabase project, we deploy an instance of this server alongside your database, and inject your database with the required Auth schema.\n\nThe Auth service is responsible for:\n\n- Validating, issuing, and refreshing JWTs\n- Serving as the intermediary between your app and Auth information in the database\n- Communicating with external providers for Social Login and SSO\n"
    }
  },
  {
    "chunk_id": "a69c39c7-3866-477d-b683-329dee050231",
    "metadata": {
      "token_count": 260,
      "source_url": "https://supabase.com/docs/guides/auth/architecture",
      "page_title": "Auth architecture | Supabase Docs"
    },
    "data": {
      "headers": {
        "h1": "Auth architecture",
        "h2": "Postgres \\#",
        "h3": ""
      },
      "text": " required Auth schema.\n\nThe Auth service is responsible for:\n\n- Validating, issuing, and refreshing JWTs\n- Serving as the intermediary between your app and Auth information in the database\n- Communicating with external providers for Social Login and SSO\nSupabase Auth uses the <code>auth</code> schema in your Postgres database to store user tables and other information. For security, this schema is not exposed on the auto-generated API.\n\nYou can connect Auth information to your own objects using [database triggers](/docs/guides/database/postgres/triggers) and [foreign keys](https://www.postgresql.org/docs/current/tutorial-fk.html). Make sure that any views you create for Auth data are adequately protected by [enabling RLS](/docs/guides/database/postgres/row-level-security) or [revoking grants](https://www.postgresql.org/docs/current/sql-revoke.html).\n\nMake sure any views you create for Auth data are protected.\n\nStarting in Postgres version 15, views inherit the RLS policies of the underlying tables if created with <code>security_invoker</code>. Views in earlier versions, or those created without <code>security_invoker</code>, inherit the permissions of the owner, who can bypass RLS policies.\n"
    }
  },
  {
    "chunk_id": "f2274377-3dd0-4c0e-a2a4-155e70780477",
    "metadata": {
      "token_count": 174,
      "source_url": "https://supabase.com/docs/guides/auth",
      "page_title": "Auth | Supabase Docs"
    },
    "data": {
      "headers": {
        "h1": "Auth",
        "h2": "Use Supabase to authenticate and authorize your users.",
        "h3": ""
      },
      "text": "Auth\nSupabase Auth makes it easy to implement authentication and authorization in your app. We provide client SDKs and API endpoints to help you create and manage users.\n\nYour users can use many popular Auth methods, including password, magic link, one-time password (OTP), social login, and single sign-on (SSO).\nAuthentication and authorization are the core responsibilities of any Auth system.\n\n- **Authentication** means checking that a user is who they say they are.\n- **Authorization** means checking what resources a user is allowed to access.\n\nSupabase Auth uses [JSON Web Tokens (JWTs)](/docs/guides/auth/jwts) for authentication. Auth integrates with Supabase's database features, making it easy to use [Row Level Security (RLS)](/docs/guides/database/postgres/row-level-security) for authorization.\n"
    }
  },
  {
    "chunk_id": "9f5ca200-aa3f-447c-8bee-4df58bf5a23d",
    "metadata": {
      "token_count": 193,
      "source_url": "https://supabase.com/docs/guides/auth",
      "page_title": "Auth | Supabase Docs"
    },
    "data": {
      "headers": {
        "h1": "Auth",
        "h2": "The Supabase ecosystem \\#",
        "h3": ""
      },
      "text": "/guides/auth/jwts) for authentication. Auth integrates with Supabase's database features, making it easy to use [Row Level Security (RLS)](/docs/guides/database/postgres/row-level-security) for authorization.\nYou can use Supabase Auth as a standalone product, but it's also built to integrate with the Supabase ecosystem.\n\nAuth uses your project's Postgres database under the hood, storing user data and other Auth information in a special schema. You can connect this data to your own tables using triggers and foreign key references.\n\nAuth also enables access control to your database's automatically generated [REST API](/docs/guides/api). When using Supabase SDKs, your data requests are automatically sent with the user's Auth Token. The Auth Token scopes database access on a row-by-row level when used along with [RLS policies](/docs/guides/database/postgres/row-level-security).\n"
    }
  },
  {
    "chunk_id": "fb9a5cb0-ffae-4564-b0fc-3d73c8e517e8",
    "metadata": {
      "token_count": 851,
      "source_url": "https://supabase.com/docs/guides/auth",
      "page_title": "Auth | Supabase Docs"
    },
    "data": {
      "headers": {
        "h1": "Auth",
        "h2": "Providers \\#",
        "h3": "Social Auth \\#"
      },
      "text": " SDKs, your data requests are automatically sent with the user's Auth Token. The Auth Token scopes database access on a row-by-row level when used along with [RLS policies](/docs/guides/database/postgres/row-level-security).\nSupabase Auth works with many popular Auth methods, including Social and Phone Auth using third-party providers. See the following sections for a list of supported third-party providers.\n[![Apple Icon](https://supabase.com/docs/img/icons/apple-icon.svg)\\\\\n\\\\\n**Apple**](/docs/guides/auth/social-login/auth-apple) [![Azure (Microsoft) Icon](https://supabase.com/docs/guides/Microsoft)\\\\\n\\\\\n**Azure (Microsoft)**](/docs/guides/auth/social-login/auth-azure) [![Bitbucket Icon](https://supabase.com/docs/img/icons/bitbucket-icon.svg)\\\\\n\\\\\n**Bitbucket**](/docs/guides/auth/social-login/auth-bitbucket) [![Discord Icon](https://supabase.com/docs/img/icons/discord-icon.svg)\\\\\n\\\\\n**Discord**](/docs/guides/auth/social-login/auth-discord) [![Facebook Icon](https://supabase.com/docs/img/icons/facebook-icon.svg)\\\\\n\\\\\n**Facebook**](/docs/guides/auth/social-login/auth-facebook) [![Figma Icon](https://supabase.com/docs/img/icons/figma-icon.svg)\\\\\n\\\\\n**Figma**](/docs/guides/auth/social-login/auth-figma) [![GitHub Icon](https://supabase.com/docs/img/icons/github-icon-light.svg)\\\\\n\\\\\n**GitHub**](/docs/guides/auth/social-login/auth-github) [![GitLab Icon](https://supabase.com/docs/img/icons/gitlab-icon.svg)\\\\\n\\\\\n**GitLab**](/docs/guides/auth/social-login/auth-gitlab) [![Google Icon](https://supabase.com/docs/img/icons/google-icon.svg)\\\\\n\\\\\n**Google**](/docs/guides/auth/social-login/auth-google) [![Kakao Icon](https://supabase.com/docs/img/icons/kakao-icon.svg)\\\\\n\\\\\n**Kakao**](/docs/guides/auth/social-login/auth-kakao) [![Keycloak Icon](https://supabase.com/docs/img/icons/keycloak-icon.svg)\\\\\n\\\\\n**Keycloak**](/docs/guides/auth/social-login/auth-keycloak) [![LinkedIn Icon](https://supabase.com/docs/img/icons/linkedin-icon.svg)\\\\\n\\\\\n**LinkedIn**](/docs/guides/auth/social-login/auth-linkedin) [![Notion Icon](https://supabase.com/docs/img/icons/notion-icon.svg)\\\\\n\\\\\n**Notion**](/docs/guides/auth/social-login/auth-notion) [![Slack Icon](https://supabase.com/docs/img/icons/slack-icon.svg)\\\\\n\\\\\n**Slack**](/docs/guides/auth/social-login/auth-slack) [![Spotify Icon](https://supabase.com/docs/img/icons/spotify-icon.svg)\\\\\n\\\\\n**Spotify**](/docs/guides/auth/social-login/auth-spotify) [![Twitter Icon](https://supabase.com/docs/img/icons/twitter-icon-light.svg)\\\\\n\\\\\n**Twitter**](/docs/guides/auth/social-login/auth-twitter) [![Twitch Icon](https://supabase.com/docs/img/icons/twitch-icon.svg)\\\\\n\\\\\n**Twitch**](/docs/guides/auth/social-login/auth-twitch) [![WorkOS Icon](https://supabase.com/docs/img/icons/workos-icon.svg)\\\\\n\\\\\n**WorkOS**](/docs/guides/auth/social-login/auth-workos) [![Zoom Icon](https://supabase.com/docs/img/icons/zoom-icon.svg)\\\\\n\\\\\n**Zoom**](/docs/guides/auth/social-login/auth-zoom)\n"
    }
  },
  {
    "chunk_id": "9da2bce7-10d3-42c3-be94-e6def9cd06e6",
    "metadata": {
      "token_count": 197,
      "source_url": "https://supabase.com/docs/guides/auth",
      "page_title": "Auth | Supabase Docs"
    },
    "data": {
      "headers": {
        "h1": "Auth",
        "h2": "Providers \\#",
        "h3": "Phone Auth \\#"
      },
      "text": "docs/guides/auth/social-login/auth-workos) [![Zoom Icon](https://supabase.com/docs/img/icons/zoom-icon.svg)\\\\\n\\\\\n**Zoom**](/docs/guides/auth/social-login/auth-zoom)\n[![MessageBird Icon](https://supabase.com/docs/img/icons/messagebird-icon.svg)\\\\\n\\\\\n**MessageBird**](/docs/guides/auth/phone-login?showSmsProvider=MessageBird) [![Twilio Icon](https://supabase.com/docs/img/icons/twilio-icon.svg)\\\\\n\\\\\n**Twilio**](/docs/guides/auth/phone-login?showSmsProvider=Twilio) [![Vonage Icon](https://supabase.com/docs/img/icons/vonage-icon-light.svg)\\\\\n\\\\\n**Vonage**](/docs/guides/auth/phone-login?showSmsProvider=Vonage)\n"
    }
  }
]
