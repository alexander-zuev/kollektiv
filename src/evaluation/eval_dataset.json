{
  "question": [
    "What is the purpose of Anthropic's client SDKs in accessing Vertex AI?"
  ],
  "answer": [
    "Based on the information retrieved from the RAG search, I can provide you with an answer about the purpose of Anthropic's client SDKs in accessing Vertex AI. \n\nThe primary purpose of Anthropic's client SDKs in accessing Vertex AI is to provide developers with an easy and efficient way to interact with Anthropic's Claude AI models that are available through Google Cloud's Vertex AI platform. Here are the key points:\n\n1. Integration: The SDKs allow seamless integration between Anthropic's models and the Vertex AI environment, enabling developers to use Claude models within their Google Cloud projects.\n\n2. Simplified Access: By using Anthropic's client SDKs, developers can more easily access and utilize Claude models on Vertex AI without having to deal with the complexities of direct API interactions.\n\n3. Language Support: Anthropic provides SDKs for multiple programming languages, including Python and TypeScript, allowing developers to work in their preferred language.\n\n4. Authentication and Configuration: The SDKs handle authentication with Google Cloud Platform (GCP) and help in setting up the necessary configurations, such as specifying the project ID and region.\n\n5. API Consistency: The Vertex AI API for accessing Claude is nearly identical to Anthropic's standard Messages API, with only minor differences in how the model and version are specified. This consistency makes it easier for developers familiar with Anthropic's API to work with Claude on Vertex AI.\n\n6. Model Selection: The SDKs provide a straightforward way to specify which Claude model to use (e.g., Claude 3 Haiku, Claude 3 Sonnet, etc.) when making requests to Vertex AI.\n\n7. Request Handling: The SDKs simplify the process of creating and sending requests to the Claude models, handling parameters such as max_tokens, messages, and other options supported by the API.\n\nTo use Anthropic's client SDKs for accessing Vertex AI, developers typically need to:\n\n1. Install the appropriate SDK (e.g., `pip install -U google-cloud-aiplatform \"anthropic[vertex]\"` for Python).\n2. Authenticate with Google Cloud Platform.\n3. Set up the client with the correct project ID and region.\n4. Use the SDK to create messages or generate text using the desired Claude model on Vertex AI.\n\nIn summary, the purpose of Anthropic's client SDKs in accessing Vertex AI is to provide a user-friendly, efficient, and consistent way for developers to integrate and utilize Claude AI models within their Google Cloud Vertex AI projects, abstracting away much of the complexity involved in direct API interactions."
  ],
  "contexts": [
    [
      "[Anthropic home page![light logo](https://mintlify.s3-us-west-1.amazonaws.com/anthropic/logo/light.svg)![dark logo](https://mintlify.s3-us-west-1.amazonaws.com/anthropic/logo/dark.svg)](/)\n\nEnglish\n\nSearch...\n\nCtrl K\n\nSearch\n\nNavigation\n\nVertex AI\n\nVertex AI API\n\n[Welcome](/en/home) [User Guides](/en/docs/welcome) [API Reference](/en/api/getting-started) [Prompt Library](/en/prompt-library/library) [Release Notes](/en/release-notes/overview) [Developer Newsletter](/en/developer-newsletter/overview)\n\nThe Vertex API for accessing Claude is nearly-identical to the [Messages API](/en/api/messages) and supports all of the same options, with two key differences:\n\n- In Vertex, `model` is not passed in the request body. Instead, it is specified in the Google Cloud endpoint URL.\n- In Vertex, `anthropic_version` is passed in the request body (rather than as a header), and must be set to the value `vertex-2023-10-16`.\n\nVertex is also supported by Anthropic\u2019s official [client SDKs](/en/api/client-sdks). This guide will walk you through the process of making a request to Claude on Vertex AI in either Python or TypeScript.\n\nNote that this guide assumes you have already have a GCP project that is able to use Vertex AI. See [using the Claude 3 models from Anthropic](https://cloud.google.com/vertex-ai/generative-ai/docs/partner-models/use-claude) for more information on the setup required, as well as a full walkthrough.\n\n## [\u200b](\\#install-an-sdk-for-accessing-vertex-ai)  Install an SDK for accessing Vertex AI\n\nFirst, install Anthropic\u2019s [client SDK](/en/api/client-sdks) for your language of choice.\n\nPython\n\nTypescript\n\nCopy\n\n```Python\npip install -U google-cloud-aiplatform \"anthropic[vertex]\"\n\n```\n\n## [\u200b](\\#accessing-vertex-ai)  Accessing Vertex AI\n\n### [\u200b](\\#model-availability)  Model Availability\n\nNote that Anthropic model availability varies by region. Search for \u201cClaude\u201d in the [Vertex AI Model Garden](https://console.cloud.google.com/vertex-ai/model-garden) or go to [Use Claude 3](https://cloud.google.com/vertex-ai/generative-ai/docs/partner-models/use-claude) for the latest information.\n\n#### [\u200b](\\#api-model-names)  API model names\n\n| Model | Vertex AI API model name |\n| --- | --- |\n| Claude 3 Haiku | claude-3-haiku@20240307 |\n| Claude 3 Sonnet | claude-3-sonnet@20240229 |\n| Claude 3 Opus (Public Preview) | claude-3-opus@20240229 |\n| Claude 3.5 Sonnet | claude-3-5-sonnet@20240620 |\n\n### [\u200b](\\#making-requests)  Making requests\n\nBefore running requests you may need to run `gcloud auth application-default login` to authenticate with GCP.\n\nThe following examples shows how to generate text from Claude 3 Haiku on Vertex AI:\n\nPython\n\nTypescript\n\ncURL\n\nCopy\n\n```Python\nfrom anthropic import AnthropicVertex\n\nproject_id = \"MY_PROJECT_ID\"\n# Where the model is running. e.g. us-central1 or europe-west4 for haiku\nregion = \"MY_REGION\"\n\nclient = AnthropicVertex(project_id=project_id, region=region)\n\nmessage = client.messages.create(\n    model=\"claude-3-haiku@20240307\",\n    max_tokens=100,\n    messages=[\\\n        {\\\n            \"role"
    ]
  ],
  "ground_truth": [
    "Anthropic's client SDKs are used to access Vertex AI, allowing users to make requests to Claude on Vertex AI in either Python or TypeScript."
  ]
}